[article Version 1.65.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        PolyCollection.
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release date]
    [last-revision ]
]

[import ext.qbk]

[section New Libraries]

* [phrase library..[@/libs/poly_collection/ PolyCollection]:]
  Fast containers of polymorphic objects, from
  Joaqu'''&#237;'''n M L'''&#243;'''pez Mu'''&#241;'''oz.

* /TODO/

[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/context/ Context]:]
    * call/cc supports ucontext-API (swapcontext)
    * call/cc supports Windows-Fiber-API
    * call/cc supports on demand growing (segmented/split) stacks
    * [ticket 12719]: context test cases and examples segmentation fault when built with mingw-w64 toolchain 
    * #52: Failing to build callcc test with g++-4.9

* [phrase library..[@/libs/coroutine2/ Coroutine2]:]
    * supports ucontext-API (swapcontext)
    * supports Windows-Fiber-API
    * [ticket 13064]: different behavior coroutine and coroutine2 

 * [phrase library..[@/libs/fiber/ Fiber]:] 
    * hardware transactional memory (Intel TSX) supported
    * NUMA supported
    * ucontext-API (swapcontext) supported
    * Windows-Fiber-API supported
    * on demand growing stacks
    * #121: failing to build static lib with GCC 4.8 and C++11
    * #123: assertion failure in schedule_from_remote
    * #125: erratic crashes in testsuite
    * #126: incorrect std::memory_order value in compare_exchange_strong?

* [phrase library..[@/libs/log/ Log]:]
  * General changes:
    * Improved compatibility with Solaris.
  * See [@/libs/log/doc/html/log/changelog.html changelog] for more details.

* [phrase library..[@/libs/predef/ Predef]:]
  * Fix Intel C/C++ version 9999 detection to be 12.1.0.
  * Addition of `BOOST_PREDEF_WORKAROUND` and `BOOST_PREDEF_TESTED_AT` macros
    for defect workarounds and detection.
  * Add ARM64 MSVC SIMD detection. (from Minmin Gong)
  * Add detection of iOS simulator vs device as a platform choice. (from Ruslan
    Baratov)
  * Fix MinGW incorrect header guard. (from Ruslan Baratov)

* [phrase library..[@/libs/program_options/ Program Options]:]
  * Support for storing values into `boost::optional`, thanks to Ed Catmur
    ([@https://svn.boost.org/trac/boost/ticket/7495 #7495],
     [@https://github.com/boostorg/program_options/pull/18 PR#18])
  * Parsing of implicit options can now use the value from the next token. Since 1.59,
    unless the value of implicit option was specified in the same token as the option
    itself, the implicit value was used. That proved inconvenient, and now we again
    check the next token and use it as value if it's not an option itself.
    ([@https://github.com/boostorg/program_options/issues/25 #25])

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]
