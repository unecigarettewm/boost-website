[article Version 1.73.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release date]
    [last-revision ]
]

[import ext.qbk]

[/
Formatting reference: https://www.boost.org/doc/tools/quickbook/
Please keep the list of libraries sorted in lexicographical order.
]

[section New Libraries]

[/ Example:
* [phrase library..[@/libs/accumulators/ Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.
]

* /TODO/

[endsect]

[section Updated Libraries]

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * Move semantics for shared objects ([ticket 1932]).
  * Conform to `std::pointer_traits` requirements ([github_pr interprocess 32])
  * Fixed `named_condition_any` fails to notify ([github interprocess 62])
]

* /TODO/

* [phrase library..[@/libs/flyweight/index.html Flyweight]:]
  * Maintenance work.

* [phrase library..[@/libs/multi_index/ Multi-index Containers]:]
  * `multi_index_container` is now [@https://en.cppreference.com/w/cpp/named_req/AllocatorAwareContainer `AllocatorAware`].
  * Swapping of internal `KeyFromValue`, `Compare`, `Hash` and `Pred` objects now
    selects the appropriate `swap` function between `std::swap` and ADL candidates,
    in accordance with standard specifications in [*\[swappable.requirements\]]
    (issue [github multi_index 29]). 
  * Provided some internal copy constructors and assignment operators whose
    default implicit definition is deprecated in C++11 onwards ([*\[depr.impldec\]]),
    which was warned about on some compilers. 
  * Maintenance work. 

* [phrase library..[@/libs/poly_collection/ PolyCollection]:]
  * Suppressed a potential redundant move warning in `boost::poly_collection::for_each`.
  * Fixed a bug by which elements were copied rather than moved in
    allocator-extended move construction and move assigment between collections
    with non-propagating, unequal allocators.
  * Allocator-extended move construction no longer decays to allocator-extended copy
    construction for the legacy version of libstdc++-v3 shipped with GCC 4.8
    (which can also be used by Clang).

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]
