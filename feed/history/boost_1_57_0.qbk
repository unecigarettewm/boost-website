[article Version 1.57.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release data]
    [last-revision ]
]

[import ext.qbk]

[/ Add attributes here as release progresses. See end of file for details. ]

[section New Libraries]

[/ Example:
* [phrase library..[@/libs/accumulators/ Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.
]

* /TODO/

[endsect]

[section Updated Libraries]

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * `shared_ptr` is movable and supports aliasing ([ticket 1234]).
]

* /TODO/

* [phrase library..[@/libs/iterator/ Iterator]:]
  * Most components of the library were moved into the `boost::iterators` namespace. For backward compatibility the components are also accessible in the `boost` namespace.
  * Iterator operators are now conditionally defined based on the iterator category.
  * Some of the internal components of the library were made public (`minimum_category`, for example).

* [phrase library..[@/libs/multi_index/index.html Multi-index Containers]:]
  * When `std::tuple`s are available, these can be used for lookup operations
    in indices equipped with composite keys. `boost::tuple`s are also supported
    for backwards compatibility.

* [phrase library..[@/libs/utility/ Utility]:]
  * The `next()` and `prior()` functions taking distance arguments were reworked. The code now work correctly when the distance is unsigned or both arguments are integers. The new code relies on the availability of operators supported by the first argument to select the correct implementation.
  
* [phrase library..[@/libs/numeric/ublas/ uBLAS]:]
  * removed doxygen documentation to make the distribution lighter
  * the interface of matrices and vectors has been extended with cbegin, cend, crbegin and crend member functions, as defined in c++11
  * New facades matrix_row and matrix_column to access to the matrices as an array of rows and an array of columns, respectively.
  * various bug fixes
  * removed warnings with MSVC for unused parameters
  * regression tests now mostly in green for all configuration and compilers !

[/ TODO: These libraries always use the same message, referring to their
   individual release notes. So check if they apply before the beta:

* /TODO/: [phrase library..[@/libs/spirit/ Spirit]:]
  * Spirit Vx.x, see the
    '[@/doc/libs/1_57_0/libs/spirit/doc/html/spirit/what_s_new/spirit_x_x.html What's New]'
    section for details.

* /TODO/: [phrase library..[@/libs/wave/ Wave]:]
  * See the [@/libs/wave/ChangeLog Changelog] for details.

]

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

[/
For Beta release, something like:

[status beta]
[download http://sourceforge.net/projects/boost/files/boost/1.57.0.beta.1/]
[download_basename boost_1_57_0_b1]
[documentation /doc/libs/1_57_0_b1/]

Add libraries to 'purpose field'.

For final release:

[status released]
[download http://sourceforge.net/projects/boost/files/boost/1.57.0/]
[download_basename boost_1_57_0]
[documentation /doc/libs/1_57_0/]

Fill in 'authors' field, and date (I normally just copy the date from
the email requesting that I update the site).

Remove this comment.
]
