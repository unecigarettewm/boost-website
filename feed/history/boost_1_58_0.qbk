[article Version 1.58.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release data]
    [last-revision ]
]

[import ext.qbk]

[/ Add attributes here as release progresses. See end of file for details. ]

[section New Libraries]

[/ Example:
* [phrase library..[@/libs/accumulators/ Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.
]

* /TODO/

[endsect]

[section Updated Libraries]

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * `shared_ptr` is movable and supports aliasing ([ticket 1234]).
]

* [phrase library..[@/libs/flyweight/ Flyweight]:]
  * Added hash support both with `std::hash` and [@/doc/html/hash.html `boost::hash`]. This can be
    optionally [@/libs/flyweight/doc/reference/flyweight.html#disable_hash_support disabled] to avoid
    clashes with legacy code where this support has already been defined by the user.

* [phrase library..[@/libs/multi_index/index.html Multi-index Containers]:]
  * The efficiency of lookup operations has improved in situations where they involve the generation
    of temporary values of `key_type`. Consider for instance the following code: 
    ```
    typedef multi_index_container<
      std::string,
      indexed_by<
        ordered_unique<identity<std::string> >
      >
    > multi_t;
    ...
    multi_t m=...;
    m.find("boost"); // passed a const char*, not a std::string    
    ```
    In previous versions of the library, the `find` operation generates several temporary
    `std::string`s (one every time an internal comparison is made). In sufficiently advanced
    compilers, this is now avoided so that only one temporary is created.
  * Maintenance fixes.

* /TODO/

[/ TODO: These libraries always use the same message, referring to their
   individual release notes. So check if they apply before the beta:

* /TODO/: [phrase library..[@/libs/spirit/ Spirit]:]
  * Spirit Vx.x, see the
    '[@/doc/libs/1_xx_x/libs/spirit/doc/html/spirit/what_s_new/spirit_x_x.html What's New]'
    section for details.

* /TODO/: [phrase library..[@/libs/wave/ Wave]:]
  * See the [@/libs/wave/ChangeLog Changelog] for details.

]

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

[/
For Beta release, something like:

[status beta]
[download http://sourceforge.net/projects/boost/files/boost/1.58.0.beta.1/]
[download_basename boost_1_58_0_b1]
[documentation /doc/libs/1_58_0_b1/]

Add libraries to 'purpose field'.

For final release:

[status released]
[download http://sourceforge.net/projects/boost/files/boost/1.58.0/]
[download_basename boost_1_58_0]
[documentation /doc/libs/1_58_0/]

Fill in 'authors' field, and date (I normally just copy the date from
the email requesting that I update the site).

Remove this comment.
]
