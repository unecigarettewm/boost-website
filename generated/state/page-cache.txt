(feed/history/boost_1_64_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_64_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/process/">Process</a>:</span>
"  Process library by Klemens
"          D. Morgenstern, that provides cross platorm ways to allows you to:
"        </div>
"        <ul>
"          <li>
"            <div>
"              create child processes
"            </div>
"          </li>
"          <li>
"            <div>
"              setup streams for child processes
"            </div>
"          </li>
"          <li>
"            <div>
"              communicate with child processes through streams (synchronously or
"              asynchronously)
"            </div>
"          </li>
"          <li>
"            <div>
"              wait for processes to exit (synchronously or asynchronously)
"            </div>
"          </li>
"          <li>
"            <div>
"              terminate processes
"            </div>
"          </li>
"        </ul>
"        <div>
"          Broken feature:
"        </div>
"        <ul>
"          <li>
"            <div>
"              <a href="https://github.com/klemens-morgenstern/boost-process/issues/67">GitHub
"              #67: <em>"group.wait() does not return"</em></a>.
"            </div>
"          </li>
"        </ul>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_64_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/any/">Any</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Suppressed false warnings about returning reference to temporary
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">addressof</span></code> is now used instead of
"                directly taking the address <a href="https://svn.boost.org/trac/boost/ticket/12615">#12615</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Headers are not included using double quotes any more <a href="https://svn.boost.org/trac/boost/ticket/12053">#12053</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"            <li>
"              <div>
"                Added more test
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/atomic/">Atomic</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed possible incorrect code generation in 64-bit atomic operations
"                on 32-bit x86 with gcc versions older than 4.7 and compatible compilers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_NO_CXX11_SFINAE_EXPR</span></code>
"                defect detection.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/container/">Container</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12749">Trac
"                      #12749: <em>"container::pmr::polymorphic_allocator
"                      compilation error"</em></a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11333">Trac
"                      #11333: <em>"boost::basic_string_ref should interop
"                      with boost::container::basic_string"</em></a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/container/pull/45">GitHub
"                      #45: <em>"emplace_back must return reference to
"                      back(), not to *end()"</em></a>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                new API: call/cc
"              </div>
"            </li>
"            <li>
"              <div>
"                deprecated API:execution-context
"              </div>
"            </li>
"            <li>
"              <div>
"                stack manipulation on MIPS fixed
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/12719">#12719</a> segmentation fault when built with mingw-w64
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/12948">#12948</a> Unexpected snprintf result is on Android ARM
"              </div>
"            </li>
"            <li>
"              <div>
"                #38: context_entry() crashes on macOS
"              </div>
"            </li>
"            <li>
"              <div>
"                #39: Unknown directive .cpu on aarch64 with Clang 3.8 on Android
"              </div>
"            </li>
"            <li>
"              <div>
"                #41: std::bind() fails with invoke()
"              </div>
"            </li>
"            <li>
"              <div>
"                #46: "rename of continuation member functions" missed a
"                spot
"              </div>
"            </li>
"            <li>
"              <div>
"                #50: bad assembly for fcontext on ppc64/sysv/elf
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/conversion/">Conversion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Docs were ported to Quickbook (thanks to Mikhail Maksimov for the
"                port)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a memory leak in test (thanks to Mikhail Maksimov for the fix)
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <code><span class="keyword">constexpr</span></code>
"                <code><span class="identifier">addressof</span></code> on compilers
"                that support C++11 <code><span class="keyword">constexpr</span></code>
"                and SFINAE expressions (Glen Fernandes). <code><span class="identifier">BOOST_CORE_NO_CONSTEXPR_ADDRESSOF</span></code>
"                macro indicates when <code><span class="keyword">constexpr</span></code>
"                <code><span class="identifier">addressof</span></code> is not
"                available.
"              </div>
"            </li>
"            <li>
"              <div>
"                In <code><span class="identifier">lightweight_test</span><span class="special">.</span><span class="identifier">hpp</span></code>,
"                added new macros <code><span class="identifier">BOOST_TEST_ALL_EQ</span></code>
"                and <code><span class="identifier">BOOST_TEST_ALL_WITH</span></code>
"                for testing container contents (Bjorn Reese).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                #4: coroutine2&lt;&gt; does not accept std::bind
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed WinCE compilation
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">boost</span><span class="special">:</span><span class="identifier">dll</span><span class="special">::</span><span class="identifier">symbol_location_ptr</span></code> function for
"                getting location of a symbol by pointer that could not be dereferenced
"                (<code><span class="keyword">void</span></code> pointer for example)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed UB in <code><span class="identifier">detail</span><span class="special">::</span><span class="identifier">aggressive_ptr_cast</span></code>
"                for member pointers
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed leaks in experimental smart imports
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed warnings
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>
"                and <code><span class="identifier">leak</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                (un)bounded_channel&lt;&gt; removed
"              </div>
"            </li>
"            <li>
"              <div>
"                #100: ASIO: unbuffered_channel / scheduler notify issue
"              </div>
"            </li>
"            <li>
"              <div>
"                #105: skynet variants crash on windows
"              </div>
"            </li>
"            <li>
"              <div>
"                #106: Passing a fixed_stack allocator to async/packaged_task doesn't
"                compile
"              </div>
"            </li>
"            <li>
"              <div>
"                #110: Compile error on ARMv6
"              </div>
"            </li>
"            <li>
"              <div>
"                #111: endless-loop in buffered_channel::try_value_pop()
"              </div>
"            </li>
"            <li>
"              <div>
"                #114: buffered_channel::try_push<code> <span class="identifier">does</span>
"                <span class="keyword">not</span> <span class="identifier">wake</span>
"                <span class="identifier">fibers</span> <span class="identifier">in</span>
"                </code>pop`
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      matrix transformation is now based on Boost.QVM instead of
"                      Boost.Ublas
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes:
"                <ul>
"                  <li>
"                    <div>
"                      ublas_transformer is renamed to matrix_transformer
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      explicit modifier is added to constructors of rtree index::dynamic_*
"                      parameters
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      strategy::area::huiller replaced by strategy::area::spherical
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/363">363</a>
"                      Missing includes in geometry/index/parameters.hpp
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/364">364</a>
"                      within(Linear, Areal) compilation error when arguments use
"                      different point types
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/geometry/issues/370">370</a>
"                      Buffer Seg Faults with Ring as Input
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved tickets:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11899">11899</a>
"                      boost::geometry::equals doesn't handle open polygons
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11930">11930</a>
"                      Inaccuracy of area::huiller strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/11931">11931</a>
"                      Wrong spherical area with pole encircling polygons
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12410">12410</a>
"                      Lack of support of geographic coordinate system in correct()
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12566">12566</a>
"                      Ambiguous template instantiation in equal_to&lt;&gt; when pair
"                      value contains raw pointer
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12861">12861</a>
"                      Segmentation fault in stdlibc++ (gcc 4.8.2) affecting rtree
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12885">12885</a>
"                      Use BOOST_THROW_EXCEPTION instead of throw
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fix distance_measure in get_turn_info
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Stop using <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">unary_function</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">binary_function</span></code> when they're not
"                available.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/interprocess/">Interprocess</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12617">Trac
"                      #12617 (<em>"clock_gettime not available on OS X
"                      10.11"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12744">Trac
"                      #12744 (<em>"winapi::set_timer_resolution inadvertently
"                      changes timer resolution (Windows)"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/32">GitHub
"                      Pull #32 (<em>"Conform to std::pointer_traits requirements"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/33">GitHub
"                      Pull #33 (<em>"explicit cast to derived class"
"                      and "64/32 bit processes sharing"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/34">GitHub
"                      Pull #34 (<em>"Update example to use multi_index::member
"                      instead of BOOST_MULTI_INDEX_MEMBER"</em>)</a>.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/interprocess/pull/35">GitHub
"                      Pull #35 (<em>"Fixed options for cross-compilation"</em>)</a>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                New experimental option <code><span class="identifier">BOOST_INTERPROCESS_BOOTSTAMP_IS_SESSION_MANAGER_BASED</span></code>
"                from Windows systems. This option derives the unique bootstamp used
"                to name the folder where shared memory is placed from registry values
"                associated with the session manager. This option only works on Vista
"                and later systems and might be more stable than the default version.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/intrusive/">Intrusive</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed bugs:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12745">Boost
"                      Trac #12745: <em>key_nodeptr_comp broken if the key type
"                      is void*</em></a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12761">Boost
"                      Trac #12761: <em>intrusive::set::swap doesn't swap the
"                      comparison function*</em></a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/lexical_cast/">LexicalCast</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed multiple warnings <a href="https://svn.boost.org/trac/boost/ticket/11842">#11842</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/math/">Math</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Big push to ensure all functions in also in C99 are compatible with
"                Annex F.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved accuracy of the Bessel functions I0, I1, K0 and K1, see
"                <a href="https://svn.boost.org/trac/boost/ticket/12066">12066</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/index.html">Multi-index Containers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed a bug related to ambiguous references in the presence of more
"                than one ranked index (ticket <a href="https://svn.boost.org/trac/boost/ticket/12955">#12955</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multiprecision/">Multiprecision</a>:</span>
"          <ul>
"            <li>
"              <div>
"                In <code><span class="identifier">cpp_bin_float</span></code>
"                prevent double rounding when converting to a denormalized float.
"                See <a href="https://svn.boost.org/trac/boost/ticket/12527">#12527</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in integer sqrt for very small integers. See <a href="https://svn.boost.org/trac/boost/ticket/12559">#12559</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix conversion to signed-zero in <code><span class="identifier">cpp_bin_float</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Change <code><span class="identifier">cpp_bin_float</span></code>
"                rounding code to round at arbitrary location so we can use it for
"                conversions, see <a href="https://svn.boost.org/trac/boost/ticket/12527">#12527</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improve performance of 128-bit bit-scan operations.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix subtraction of very small quantities in <code><span class="identifier">cpp_bin_float</span></code>.
"                See: <a href="https://svn.boost.org/trac/boost/ticket/12580">#12580</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Bring error handling into line with C99 Annex F. See <a href="https://svn.boost.org/trac/boost/ticket/12581">#12581</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bitwise export of trivial <code><span class="identifier">cpp_int</span></code>'s,
"                see <a href="https://svn.boost.org/trac/boost/ticket/12627">#12627</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <code><span class="identifier">ilogb</span></code> (and code
"                that uses it) to consistently return the smallest value of the exponent
"                type when the argument is zero, see <a href="https://svn.boost.org/trac/boost/ticket/12625">#12625</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Allow conversion from <code><span class="identifier">__float128</span></code>
"                to <code><span class="identifier">cpp_bin_float</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix bug in left shift of <code><span class="identifier">cpp_int</span></code>
"                which would result in bit-loss, see <a href="https://svn.boost.org/trac/boost/ticket/12790">#12790</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed bugs in bounded but variable precision <code><span class="identifier">cpp_int</span></code>'s
"                caused by over-aggressive constexpr optimization, see <a href="https://svn.boost.org/trac/boost/ticket/12798">#12798</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Intel C/C++ compiler version specification.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add <code><span class="identifier">BOOST_VERSION_NUMBER_MAJOR</span></code>,
"                <code><span class="identifier">BOOST_VERSION_NUMBER_MINOR</span></code>,
"                <code><span class="identifier">BOOST_VERSION_NUMBER_PATCH</span></code>
"                macros to extract components from valid version numbers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Change VS version numbering. Versions after VS2015 will use the compiler
"                version instead of the varied product versions.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/regex/">Regex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Compiling with Oracle C++ toolset is no longer restricted to static
"                linking.
"              </div>
"            </li>
"            <li>
"              <div>
"                Big effort to de-fuzz the library using libFuzzer and fix identified
"                issues, see: <a href="https://svn.boost.org/trac/boost/ticket/12818">#12818</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Rewrite of <code><span class="identifier">allocate_shared</span></code>
"                and <code><span class="identifier">make_shared</span></code> for
"                arrays for a more optimal and more maintainable implementation (Glen
"                Fernandes)
"              </div>
"            </li>
"            <li>
"              <div>
"                Pointer cast functions with move semantics (Chris Glover)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.5 see the <a href="/doc/libs/1_64_0/libs/test/doc/html/boost_test/change_log.html">Change
"                log</a> section for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      Now Boost.Test provides <strong>customization
"                      points</strong> for logging user defined types
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      JUnit output format can now have a <em>log-level</em>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      JUnit output format has not better performances when the test
"                      modules have a lot of checks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/11756">#11756</a>, <a href="https://svn.boost.org/trac/boost/ticket/12540">#12540</a>, <a href="https://svn.boost.org/trac/boost/ticket/12712">#12712</a>, <a href="https://svn.boost.org/trac/boost/ticket/12748">#12748</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/12778">#12778</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull request <a href="https://github.com/boostorg/test/pull/107">PR107</a>,
"                      <a href="https://github.com/boostorg/test/pull/108">PR108</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_TYPE_INDEX_IMPLEMENT_RUNTIME_CAST</span></code>,
"                which implements the functionality for <code><span class="identifier">runtime_cast</span></code>
"                but does not include the <code><span class="identifier">BOOST_TYPE_INDEX_REGISTER_CLASS</span></code>
"                macro (thanks to Chris Glover for imlpementing it)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed undefined macro warning in stl_type_index.hpp <a href="https://svn.boost.org/trac/boost/ticket/12739">#12739</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_traits/">TypeTraits</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added new traits <code><span class="identifier">make_void</span></code>
"                and <code><span class="identifier">void_t</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Initial support for new C++17 member functions: <code><span class="identifier">insert_or_assign</span></code>
"                and <code><span class="identifier">try_emplace</span></code> in
"                <code><span class="identifier">unordered_map</span></code>, <code><span class="identifier">merge</span></code> and <code><span class="identifier">extract</span></code>
"                in all containers.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed construction of variant from <code><span class="identifier">recursive_variant_</span></code>
"                (thanks to Mikhail Maksimov for the fix) <a href="https://svn.boost.org/trac/boost/ticket/12508">#12508</a>, <a href="https://svn.boost.org/trac/boost/ticket/12645">#12645</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Do not enable variadic templates for MSVC2015Update1 as it still
"                has issues <a href="https://svn.boost.org/trac/boost/ticket/12236">#12236</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Workaround GCC6 crash (thanks to Mikhail Maksimov for the workaround)
"                <a href="https://svn.boost.org/trac/boost/ticket/12680">#12680</a>, <a href="https://svn.boost.org/trac/boost/ticket/7120">#7120</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Made <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">polymorphic_</span><span class="special">*</span><span class="identifier">get</span></code> to work as <code><span class="identifier">boost</span><span class="special">::*</span><span class="identifier">get</span></code>
"                in undocumented border cases and fixed tests <a href="https://svn.boost.org/trac/boost/ticket/11950">#11950</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                CI tests now run with <code><span class="identifier">address</span></code>,
"                <code><span class="identifier">leak</span></code>, and <code><span class="identifier">undefined</span></code> sanitizers
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_64_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5, 3.6, 3.7.1, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.2.0, 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0, 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Apple Clang: 7.0.2
"              </div>
"            </li>
"            <li>
"              <div>
"                Apple Clang, C++11: 7.0.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, C++03, mingw: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14, mingw: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4, 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.4, 3.5, 3.6, 3.7. 3.8, 3.8.1, 3.9.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.9.1, 4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0, 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Apple Clang: 7.0.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, C++03, mingw: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4, 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang, C++98: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_64_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"b567df07e42085fe7f6679e9a0cc4963578cc06651deeb18111695bdc5c9bd0d
-id
"version_1_64_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Library: Process. Updated Libraries: Any, Atomic, Config, Container, Context,
"      Conversion, Core, Coroutine2, DLL, Fiber, Geometry, Hash, Interprocess, Intrusive,
"      LexicalCast, Math, Multi-index Containers, Multiprecision, Predef, Regex, Smart
"      Pointers, Test, TypeIndex, TypeTraits, Unordered, Variant.
"
-title_xml
"Version 1.64.0
)
(feed/history/boost_1_65_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_65_0.known_issues">
"    <h3><span class="link">Known Issues</span></h3>
"    <p>
"      These are patches from library authors which were found too late to be fixed
"      in the release. Be careful as they have not been through the normal testing
"      process.
"    </p>
"    <p>
"      Combined patch for fixes to issues: <a href="/patches/1_65_0/boost_1_65_0.patch">boost_1_65_0.patch</a>.
"      Use <code><span class="identifier">patch</span> <span class="special">-</span><span class="identifier">p1</span> <span class="special">&lt;</span> <span class="identifier">boost_1_65_0</span><span class="special">.</span><span class="identifier">patch</span></code> from the root of the boost repo to
"      apply. Or you can apply the patches individually below.
"    </p>
"    <ul>
"      <li>
"        <div>
"          Context and Fiber don't return continuations when they should:
"          <ul>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0001-context-function-executed-by-resume_with-has-to-retu.patch">Context
"                patch</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0002-fiber-resume_with-requires-tor-return-a-continuation.patch">Fiber
"                patch</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Thread: Bug in <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">condition_variable</span></code> on Windows:
"          <ul>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0003-thread-130-Bug-in-boost-condition_variable-on-Window.patch">Thread
"                patch 1</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="/patches/1_65_0/0004-thread-130-Bug-in-boost-condition_variable-on-Window.patch">Thread
"                patch 2</a>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/poly_collection/">PolyCollection</a>:</span>
"  Fast
"          containers of polymorphic objects, from Joaquín M López Muñoz.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"  Gather, store,
"          copy and print backtraces, from Antony Polukhin.
"          <ul>
"            <li>
"              <div>
"                Note: Library has <a href="https://github.com/boostorg/stacktrace/issues/14">issue
"                with MinGW</a> and may produce empty backtraces with that compiler.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Changed to require <tt>g++</tt> versions &gt;= 4.7 to use
"                standard atomics, to fix a linker error when using <tt>g++</tt>
"                4.6 (<a href="https://svn.boost.org/trac/boost/ticket/13121">#13121</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Enabled use of <code><span class="keyword">constexpr</span></code>
"                and variadic templates with recent MSVC versions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a race condition in the Linux epoll backend, which may occur
"                when a socket or descriptor is closed while another thread is blocked
"                on epoll.
"              </div>
"            </li>
"            <li>
"              <div>
"                Eliminated use of deprecated <code><span class="identifier">auto_ptr</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed misplaced use of <code><span class="identifier">asio_handler_is_continuation</span></code>
"                result in reactive <code><span class="identifier">async_accept</span></code>
"                implementation.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed to use <code><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code>
"                rather than <code><span class="identifier">sys</span><span class="special">/</span><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code> on some modern POSIX platforms
"                (<a href="https://svn.boost.org/trac/boost/ticket/12419">#12419</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed MSVC intellisense detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Disabled use of the <code><span class="identifier">__thread</span></code>
"                keyword extension for android/clang/x86 targets.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      call/cc supports ucontext-API (swapcontext)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports Windows-Fiber-API
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports on demand growing (segmented/split) stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12719">#12719</a>: context test cases and examples segmentation fault
"                      when built with mingw-w64 toolchain
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #52: Failing to build callcc test with g++-4.9
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/context/commit/420554fe9ac01482990e8ae314f4f7ba81010c9a">420554fe9ac01482990e8ae314f4f7ba81010c9a</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_NO_CXX11_POINTER_TRAITS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_FOLD_EXPRESSIONS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_INLINE_VARIABLES</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_STRUCTURED_BINDINGS</span></code>
"                defect detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                BOOST_FALLTHROUGH support for GCC 7 and above. (Glen Fernandes)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <code><span class="identifier">pointer_traits</span></code>
"                for C++03 and higher, that implements <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html">P0653r0</a>
"                (Glen Fernandes). This implementation is now used by Align, Circular
"                Buffer, Fiber, Geometry, among other libraries.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_TEST_GT</span></code>
"                and <code><span class="identifier">BOOST_TEST_GE</span></code>
"                to Lightweight Test.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                supports ucontext-API (swapcontext)
"              </div>
"            </li>
"            <li>
"              <div>
"                supports Windows-Fiber-API
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/13064">#13064</a>: different behavior coroutine and coroutine2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix PE parsing on non Windows platforms.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      hardware transactional memory (Intel TSX) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      NUMA supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      ucontext-API (swapcontext) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Windows-Fiber-API supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      on demand growing stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      #121: failing to build static lib with GCC 4.8 and C++11
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #123: assertion failure in schedule_from_remote
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #125: erratic crashes in testsuite
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #126: incorrect std::memory_order value in compare_exchange_strong?
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/fiber/commit/63f1041f0e484e64dec437a0fa780ea2463abda2">63f1041f0e484e64dec437a0fa780ea2463abda2</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                MSVC 14.1 supports variadic containers, such as <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">vector</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">deque</span></code>, <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">map</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">set</span></code>, and <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">tuple</span></code>.
"                (<a href="https://svn.boost.org/trac/boost/ticket/12986">#12986</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      Add correct() overload taking area strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add is_convex() overload taking side strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add missing relational operations (covered_by, crosses, equals,
"                      etc.) for MultiPoint/AnyGeometry
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12410">12410</a>
"                      Lack of support of geographic coordinate system in correct()
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13035">13035</a>
"                      Wrong result of non-cartesian intersection strategies for segments
"                      near poles.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13057">13057</a>
"                      Wrong result of intersects() for linestrings caused by numerical
"                      issue in disjoint() for boxes.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      an interior ring touches another interior ring
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      a polygon was located in an interior ring, all touching each
"                      other
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix union which could produce invalid results (for some cases,
"                      this needs to define BOOST_GEOMETRY_INCLUDE_SELF_TURNS)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix intersection (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix difference (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix propagation of area strategy into the internals of various
"                      algorithms from intersection strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix uninitialized variable in relate and reference to temporary
"                      in overlay
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix error in disjoint for geographic Segment/Box
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix handling of non-cartesian geometries in various algorithms
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for <code><span class="keyword">char16_t</span></code>,
"                <code><span class="keyword">char32_t</span></code>, <code><span class="identifier">u16string</span></code>, <code><span class="identifier">u32string</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                General changes:
"                <ul>
"                  <li>
"                    <div>
"                      Improved compatibility with Solaris.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/phoenix/">Phoenix</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Corrected some documentation. (<a href="https://github.com/boostorg/phoenix/pull/50">PR#50</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">erase</span></code> with associative container
"                returns iterator in C++11 mode. (<a href="https://svn.boost.org/trac/boost/ticket/7423">#7423</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">set</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">multiset</span></code>
"                should be worked with predefined lazy functions. (<a href="https://github.com/boostorg/phoenix/pull/52">PR#52</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Disable <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">random_shuffle</span></code> in C++17. (<a href="https://github.com/boostorg/phoenix/pull/53">PR#53</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Don't forward declare, include instead. (<a href="https://svn.boost.org/trac/boost/ticket/11875">#11875</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Intel C/C++ version 9999 detection to be 12.1.0.
"              </div>
"            </li>
"            <li>
"              <div>
"                Addition of <code><span class="identifier">BOOST_PREDEF_WORKAROUND</span></code>
"                and <code><span class="identifier">BOOST_PREDEF_TESTED_AT</span></code>
"                macros for defect workarounds and detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add ARM64 MSVC SIMD detection. (from Minmin Gong)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add detection of iOS simulator vs device as a platform choice. (from
"                Ruslan Baratov)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix MinGW incorrect header guard. (from Ruslan Baratov)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/program_options/">Program Options</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for storing values into <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">optional</span></code>,
"                thanks to Ed Catmur (<a href="https://svn.boost.org/trac/boost/ticket/7495">#7495</a>,
"                <a href="https://github.com/boostorg/program_options/pull/18">PR#18</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Parsing of implicit options can now use the value from the next token.
"                Since 1.59, unless the value of implicit option was specified in
"                the same token as the option itself, the implicit value was used.
"                That proved inconvenient, and now we again check the next token and
"                use it as value if it's not an option itself. (<a href="https://github.com/boostorg/program_options/issues/25">#25</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/python/">Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">eval</span><span class="special">()</span></code>,
"                <code><span class="identifier">exec</span><span class="special">()</span></code>,
"                and <code><span class="identifier">exec_statement</span><span class="special">()</span></code> now allow <code><span class="keyword">char</span>
"                <span class="keyword">const</span> <span class="special">*</span></code>
"                arguments, in addition to <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">str</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                The <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numeric</span></code> API has been removed, as
"                it is being obsoleted by <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numpy</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix some build issues when using Python3 with MSVC.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New class template<code><span class="identifier">atomic_shared_ptr</span></code>,
"                that provides thread-safe atomic pointer operations over <code><span class="identifier">shared_ptr</span></code>. (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                New class template <code><span class="identifier">local_shared_ptr</span></code>,
"                where the reference count is updated with non-atomic operations.
"                (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                More optimizations in <code><span class="identifier">allocate_shared</span></code>
"                and <code><span class="identifier">make_shared</span></code> for
"                arrays. (Glen Fernandes)
"              </div>
"            </li>
"            <li>
"              <div>
"                Documentation has been completely rewritten in Asciidoc format.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.6 see the <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/change_log.html">Change
"                log</a> section for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      C++17 compatibility (tested on VS2017), thanks to <a href="https://github.com/DanielaE">Daniela
"                      Engert</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Direct comparison of C-arrays in <code><span class="identifier">BOOST_TEST</span></code>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Better global fixtures mechanism, and spitting of responsibilities
"                      with <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/test_org_reference/test_org_boost_test_global_fixture.html"><code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code></a>
"                      for global fixtures and <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/link_references/link_boost_test_global_configuration.html"><code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code></a>
"                      for global initialization (compile time configuration).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Improved support for fixtures (<code><span class="identifier">setup</span></code>
"                      / <code><span class="identifier">teardown</span></code>
"                      member function) which enables better teardown time checks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes
"                <ul>
"                  <li>
"                    <div>
"                      Some API changes for the loggers
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Deprecating <code><span class="identifier">BOOST_GLOBAL_FIXTURE</span></code>
"                      in favor of <code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code>
"                      and <code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code>
"                      (see above)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/5282">#5282</a>, <a href="https://svn.boost.org/trac/boost/ticket/5563">#5563</a>, <a href="https://svn.boost.org/trac/boost/ticket/11471">#11471</a>, <a href="https://svn.boost.org/trac/boost/ticket/11962">#11962</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/12228">#12228</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/12631">#12631</a>, <a href="https://svn.boost.org/trac/boost/ticket/13011">#13011</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull request <a href="https://github.com/boostorg/test/pull/106">PR106</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Important Regression on Windows:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/130">#130</a>
"                      windows: Bug in boost::condition_variable on Windows Please,
"                      merge these two patches
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657">https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d">https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/6787">#6787</a>
"                      boost::thread::sleep() hangs if system time is rolled back
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12519">#12519</a>
"                      boost::thread::try_join_for does not return after timeout
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12874">#12874</a>
"                      future&lt;&gt; extension constructor must be under BOOST_THREAD_PROVIDES_FUTURE_UNWRAP
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12888">#12888</a>
"                      Linking with boost thread does not work on mingw/gcc 4.4
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12958">#12958</a>
"                      sync_bounded_queue::wait_pull_front( lve ) might throw
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13077">#13077</a>
"                      Linking to static 64bit libboost_thread fails DLL initialization
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13155">#13155</a>
"                      log doesn't build on a system with pthreads
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/121">#121</a>
"                      on_tls_prepare is broken under VS2017
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Include &lt;boost/functional/hash.hpp&gt; if required, thanks to
"                Ed Catmur <a href="https://svn.boost.org/trac/boost/ticket/13009">#13009</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use native <code><span class="identifier">hash_code</span><span class="special">()</span></code> when possible on GCC-like compilers
"                <a href="https://svn.boost.org/trac/boost/ticket/13027">#13027</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <code><span class="identifier">ctti_type_index</span></code>
"                for GCC 7 and later, thanks to Benjamin Buch <a href="https://github.com/boostorg/type_index/pull/16">PR16</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/typeof/">Typeof</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix compilation error with clang-cl <a href="https://svn.boost.org/trac10/ticket/11821">ticket
"                11821</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use the same data structure for <code><span class="identifier">unordered_set</span></code>
"                and <code><span class="identifier">unordered_multiset</span></code>,
"                and for<code><span class="identifier">unordered_map</span></code>
"                and <code><span class="identifier">unordered_multimap</span></code>.
"                This is required for C++17, so that nodes can be merged and extracted
"                between compatible containers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add deprecated attributes to long deprecated functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved use of <code><span class="identifier">allocator_traits</span></code>
"                <code><span class="identifier">construct</span></code> and <code><span class="identifier">destroy</span></code> on C++11 compilers, using
"                piecewise pair construction when appropriate.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fewer workarounds on newer Oracle compilers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid dereferencing pointers to uninitialized memory (<a href="https://github.com/boostorg/unordered/pull/5">PR
"                #5</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved compatibility of <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">next</span></code>/<code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">prior</span></code> with SFINAE-unfriendly iterators.
"                <a href="https://svn.boost.org/trac/boost/ticket/10847">#10847</a>, <a href="https://svn.boost.org/trac/boost/ticket/13002">#13002</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                r-value overload for <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">get</span></code>
"                was added by Albert Sverdlov <a href="https://svn.boost.org/trac/boost/ticket/13018">#13018</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Missing include fro <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">variant</span><span class="special">/</span><span class="identifier">polymorphic_get</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code>
"                header was added by Adam Badura <a href="https://svn.boost.org/trac/boost/ticket/13037">#13037</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">make_variant_over</span></code> was fixed and
"                now works with views and other Forward Sequences (thanks to Mikhail
"                Maksimov for the fix) <a href="https://svn.boost.org/trac/boost/ticket/8554">#8554</a>, <a href="https://svn.boost.org/trac/boost/ticket/10041">#10041</a>, <a href="https://github.com/boostorg/variant/pull/35">PR#35</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 8.1.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC, C++11: 4.7.3
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5_next, 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5_next, 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.8.1, 3.9.1, 4.0.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.1, 6.2.0, 6.3.0, 7.1.0, 8.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 8.1.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5_next, 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5_next, 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"794766bb24770f62484c91ed0a691f0a60d6ba02995a6c77aa71856f03e4732e
-id
"version_1_65_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Libraries: PolyCollection, Stacktrace. Updated Libraries: Asio, Context,
"      Config, Core, Coroutine2, DLL, Fiber, Fusion, Geometry, Hash, Log, Phoenix,
"      Predef, Program Options, Python, Smart Pointers, Test, Thread, TypeIndex, Typeof,
"      Unordered, Utility, Variant.
"
-title_xml
"Version 1.65.0
)
(feed/history/boost_1_65_1.qbk
-description_xhtml
"
"
"
"  <div id="version_1_65_1.fixes_in_1_65_1">
"    <h3><span class="link">Fixes in 1.65.1</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Version macro changes for CUDA.
"              </div>
"            </li>
"            <li>
"              <div>
"                Update last known MSVC version.
"              </div>
"            </li>
"            <li>
"              <div>
"                MSVC 14.11 supports structured bindings.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Return a continuation from functions executed by <code><span class="identifier">resume_with</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Return a continuation from functions executed by <code><span class="identifier">resume_with</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Visual C++ version checks.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix compilation for NVCC with host compiler clang.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Update build testing file to detail with a MinGW issue.
"              </div>
"            </li>
"            <li>
"              <div>
"                Change preprocessor file extensions to work with the installation
"                system.
"              </div>
"            </li>
"            <li>
"              <div>
"                Support FreeBSD and other OSs that do not define <code><span class="identifier">_GNU_SOURCE</span></code>
"                but have <code><span class="identifier">_Unwind_Backtrace</span></code>
"                function.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix bug in <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">condition_variable</span></code>
"                on Windows (<a href="https://github.com/boostorg/thread/issues/130">#130</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_1.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 4.0.1, 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 4.0.1, 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5.0, 3.6.0, 3.7.1, 3.8.0, 3.9.1, 4.0.0, 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++17: 5.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 4.0.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.4, 5.4.0, 6.4.0, 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.4.0, 5.4.1, 6.3.0, 6.4.0, 7.1.0, 7.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++17: 7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.3.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Clang: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 8.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 8.1.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0, 4.5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0, 6.2.0, 6.3.0, 6.4.0,
"                7.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0, 14.1
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          FreeBSD:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.8.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC, C++11: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5_next, 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: , 12.5_next, 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_1.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"  <div id="version_1_65_1.new_libraries_in_1_65_0">
"    <h3><span class="link">New Libraries in
"    1.65.0</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/poly_collection/">PolyCollection</a>:</span>
"  Fast
"          containers of polymorphic objects, from Joaquín M López Muñoz.
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/stacktrace/">Stacktrace</a>:</span>
"  Gather, store,
"          copy and print backtraces, from Antony Polukhin.
"          <ul>
"            <li>
"              <div>
"                Note: Library has <a href="https://github.com/boostorg/stacktrace/issues/14">issue
"                with MinGW</a> and may produce empty backtraces with that compiler.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_65_1.updated_libraries_in_1_65_0">
"    <h3><span class="link">Updated Libraries
"    in 1.65.0</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/asio/">Asio</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Changed to require <tt>g++</tt> versions &gt;= 4.7 to use
"                standard atomics, to fix a linker error when using <tt>g++</tt>
"                4.6 (<a href="https://svn.boost.org/trac/boost/ticket/13121">#13121</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Enabled use of <code><span class="keyword">constexpr</span></code>
"                and variadic templates with recent MSVC versions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed a race condition in the Linux epoll backend, which may occur
"                when a socket or descriptor is closed while another thread is blocked
"                on epoll.
"              </div>
"            </li>
"            <li>
"              <div>
"                Eliminated use of deprecated <code><span class="identifier">auto_ptr</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed misplaced use of <code><span class="identifier">asio_handler_is_continuation</span></code>
"                result in reactive <code><span class="identifier">async_accept</span></code>
"                implementation.
"              </div>
"            </li>
"            <li>
"              <div>
"                Changed to use <code><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code>
"                rather than <code><span class="identifier">sys</span><span class="special">/</span><span class="identifier">poll</span><span class="special">.</span><span class="identifier">h</span></code> on some modern POSIX platforms
"                (<a href="https://svn.boost.org/trac/boost/ticket/12419">#12419</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed MSVC intellisense detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Disabled use of the <code><span class="identifier">__thread</span></code>
"                keyword extension for android/clang/x86 targets.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/context/">Context</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      call/cc supports ucontext-API (swapcontext)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports Windows-Fiber-API
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      call/cc supports on demand growing (segmented/split) stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12719">#12719</a>: context test cases and examples segmentation fault
"                      when built with mingw-w64 toolchain
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #52: Failing to build callcc test with g++-4.9
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/context/commit/420554fe9ac01482990e8ae314f4f7ba81010c9a">420554fe9ac01482990e8ae314f4f7ba81010c9a</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/config/">Config</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_NO_CXX11_POINTER_TRAITS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_FOLD_EXPRESSIONS</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_INLINE_VARIABLES</span></code>,
"                <code><span class="identifier">BOOST_NO_CXX17_STRUCTURED_BINDINGS</span></code>
"                defect detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                BOOST_FALLTHROUGH support for GCC 7 and above. (Glen Fernandes)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/core/">Core</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented <code><span class="identifier">pointer_traits</span></code>
"                for C++03 and higher, that implements <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0653r0.html">P0653r0</a>
"                (Glen Fernandes). This implementation is now used by Align, Circular
"                Buffer, Fiber, Geometry, among other libraries.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added <code><span class="identifier">BOOST_TEST_GT</span></code>
"                and <code><span class="identifier">BOOST_TEST_GE</span></code>
"                to Lightweight Test.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/coroutine2/">Coroutine2</a>:</span>
"          <ul>
"            <li>
"              <div>
"                supports ucontext-API (swapcontext)
"              </div>
"            </li>
"            <li>
"              <div>
"                supports Windows-Fiber-API
"              </div>
"            </li>
"            <li>
"              <div>
"                <a href="https://svn.boost.org/trac/boost/ticket/13064">#13064</a>: different behavior coroutine and coroutine2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/dll/">DLL</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix PE parsing on non Windows platforms.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      hardware transactional memory (Intel TSX) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      NUMA supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      ucontext-API (swapcontext) supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Windows-Fiber-API supported
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      on demand growing stacks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      #121: failing to build static lib with GCC 4.8 and C++11
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #123: assertion failure in schedule_from_remote
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #125: erratic crashes in testsuite
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      #126: incorrect std::memory_order value in compare_exchange_strong?
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                important:
"                <ul>
"                  <li>
"                    <div>
"                      required bug fix <a href="https://github.com/boostorg/fiber/commit/63f1041f0e484e64dec437a0fa780ea2463abda2">63f1041f0e484e64dec437a0fa780ea2463abda2</a>
"                      not included in 1.65
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                MSVC 14.1 supports variadic containers, such as <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">vector</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">deque</span></code>, <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">map</span></code>,
"                <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">set</span></code>, and <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">tuple</span></code>.
"                (<a href="https://svn.boost.org/trac/boost/ticket/12986">#12986</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/geometry/">Geometry</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improvements:
"                <ul>
"                  <li>
"                    <div>
"                      Add correct() overload taking area strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add is_convex() overload taking side strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Add missing relational operations (covered_by, crosses, equals,
"                      etc.) for MultiPoint/AnyGeometry
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Solved issues:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/12410">12410</a>
"                      Lack of support of geographic coordinate system in correct()
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13035">13035</a>
"                      Wrong result of non-cartesian intersection strategies for segments
"                      near poles.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://svn.boost.org/trac/boost/ticket/13057">13057</a>
"                      Wrong result of intersects() for linestrings caused by numerical
"                      issue in disjoint() for boxes.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bugfixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      an interior ring touches another interior ring
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix is_valid which could return false for multipolygons where
"                      a polygon was located in an interior ring, all touching each
"                      other
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix union which could produce invalid results (for some cases,
"                      this needs to define BOOST_GEOMETRY_INCLUDE_SELF_TURNS)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix intersection (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix difference (idem), but some cases are still not yet valid
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix propagation of area strategy into the internals of various
"                      algorithms from intersection strategy
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix uninitialized variable in relate and reference to temporary
"                      in overlay
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix error in disjoint for geographic Segment/Box
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Fix handling of non-cartesian geometries in various algorithms
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash/">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for <code><span class="keyword">char16_t</span></code>,
"                <code><span class="keyword">char32_t</span></code>, <code><span class="identifier">u16string</span></code>, <code><span class="identifier">u32string</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                General changes:
"                <ul>
"                  <li>
"                    <div>
"                      Improved compatibility with Solaris.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/phoenix/">Phoenix</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Corrected some documentation. (<a href="https://github.com/boostorg/phoenix/pull/50">PR#50</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">erase</span></code> with associative container
"                returns iterator in C++11 mode. (<a href="https://svn.boost.org/trac/boost/ticket/7423">#7423</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">set</span></code> and <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">multiset</span></code>
"                should be worked with predefined lazy functions. (<a href="https://github.com/boostorg/phoenix/pull/52">PR#52</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Disable <code><span class="identifier">phoenix</span><span class="special">::</span><span class="identifier">random_shuffle</span></code> in C++17. (<a href="https://github.com/boostorg/phoenix/pull/53">PR#53</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Don't forward declare, include instead. (<a href="https://svn.boost.org/trac/boost/ticket/11875">#11875</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/predef/">Predef</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix Intel C/C++ version 9999 detection to be 12.1.0.
"              </div>
"            </li>
"            <li>
"              <div>
"                Addition of <code><span class="identifier">BOOST_PREDEF_WORKAROUND</span></code>
"                and <code><span class="identifier">BOOST_PREDEF_TESTED_AT</span></code>
"                macros for defect workarounds and detection.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add ARM64 MSVC SIMD detection. (from Minmin Gong)
"              </div>
"            </li>
"            <li>
"              <div>
"                Add detection of iOS simulator vs device as a platform choice. (from
"                Ruslan Baratov)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix MinGW incorrect header guard. (from Ruslan Baratov)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/program_options/">Program Options</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Support for storing values into <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">optional</span></code>,
"                thanks to Ed Catmur (<a href="https://svn.boost.org/trac/boost/ticket/7495">#7495</a>,
"                <a href="https://github.com/boostorg/program_options/pull/18">PR#18</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Parsing of implicit options can now use the value from the next token.
"                Since 1.59, unless the value of implicit option was specified in
"                the same token as the option itself, the implicit value was used.
"                That proved inconvenient, and now we again check the next token and
"                use it as value if it's not an option itself. (<a href="https://github.com/boostorg/program_options/issues/25">#25</a>)
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/python/">Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">eval</span><span class="special">()</span></code>,
"                <code><span class="identifier">exec</span><span class="special">()</span></code>,
"                and <code><span class="identifier">exec_statement</span><span class="special">()</span></code> now allow <code><span class="keyword">char</span>
"                <span class="keyword">const</span> <span class="special">*</span></code>
"                arguments, in addition to <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">str</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                The <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numeric</span></code> API has been removed, as
"                it is being obsoleted by <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">python</span><span class="special">::</span><span class="identifier">numpy</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix some build issues when using Python3 with MSVC.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/smart_ptr/">Smart Pointers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                New class template<code><span class="identifier">atomic_shared_ptr</span></code>,
"                that provides thread-safe atomic pointer operations over <code><span class="identifier">shared_ptr</span></code>. (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                New class template <code><span class="identifier">local_shared_ptr</span></code>,
"                where the reference count is updated with non-atomic operations.
"                (Peter Dimov)
"              </div>
"            </li>
"            <li>
"              <div>
"                More optimizations in <code><span class="identifier">allocate_shared</span></code>
"                and <code><span class="identifier">make_shared</span></code> for
"                arrays. (Glen Fernandes)
"              </div>
"            </li>
"            <li>
"              <div>
"                Documentation has been completely rewritten in Asciidoc format.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/test/">Test</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Boost.test v3.6 see the <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/change_log.html">Change
"                log</a> section for more details.
"              </div>
"            </li>
"            <li>
"              <div>
"                New feature:
"                <ul>
"                  <li>
"                    <div>
"                      C++17 compatibility (tested on VS2017), thanks to <a href="https://github.com/DanielaE">Daniela
"                      Engert</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Direct comparison of C-arrays in <code><span class="identifier">BOOST_TEST</span></code>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Better global fixtures mechanism, and spitting of responsibilities
"                      with <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/test_org_reference/test_org_boost_test_global_fixture.html"><code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code></a>
"                      for global fixtures and <a href="/doc/libs/1_65_0/libs/test/doc/html/boost_test/utf_reference/link_references/link_boost_test_global_configuration.html"><code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code></a>
"                      for global initialization (compile time configuration).
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Improved support for fixtures (<code><span class="identifier">setup</span></code>
"                      / <code><span class="identifier">teardown</span></code>
"                      member function) which enables better teardown time checks
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Breaking changes
"                <ul>
"                  <li>
"                    <div>
"                      Some API changes for the loggers
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Deprecating <code><span class="identifier">BOOST_GLOBAL_FIXTURE</span></code>
"                      in favor of <code><span class="identifier">BOOST_TEST_GLOBAL_FIXTURE</span></code>
"                      and <code><span class="identifier">BOOST_TEST_GLOBAL_CONFIGURATION</span></code>
"                      (see above)
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/5282">#5282</a>, <a href="https://svn.boost.org/trac/boost/ticket/5563">#5563</a>, <a href="https://svn.boost.org/trac/boost/ticket/11471">#11471</a>, <a href="https://svn.boost.org/trac/boost/ticket/11962">#11962</a>,
"                      <a href="https://svn.boost.org/trac/boost/ticket/12228">#12228</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Trac tickets <a href="https://svn.boost.org/trac/boost/ticket/12631">#12631</a>, <a href="https://svn.boost.org/trac/boost/ticket/13011">#13011</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Pull request <a href="https://github.com/boostorg/test/pull/106">PR106</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/thread/">Thread</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Important Regression on Windows:
"                <ul>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/130">#130</a>
"                      windows: Bug in boost::condition_variable on Windows Please,
"                      merge these two patches
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657">https://github.com/boostorg/thread/commit/fdc0cbcd8ce8f34a19c7cdaf6f1fa679f0a49657</a>
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d">https://github.com/boostorg/thread/commit/395e3d786bc1dce9c60eb84da85f5845a2c1fb3d</a>
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes
"                <ul>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/6787">#6787</a>
"                      boost::thread::sleep() hangs if system time is rolled back
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12519">#12519</a>
"                      boost::thread::try_join_for does not return after timeout
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12874">#12874</a>
"                      future&lt;&gt; extension constructor must be under BOOST_THREAD_PROVIDES_FUTURE_UNWRAP
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12888">#12888</a>
"                      Linking with boost thread does not work on mingw/gcc 4.4
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/12958">#12958</a>
"                      sync_bounded_queue::wait_pull_front( lve ) might throw
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13077">#13077</a>
"                      Linking to static 64bit libboost_thread fails DLL initialization
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="http://svn.boost.org/trac/boost/ticket/13155">#13155</a>
"                      log doesn't build on a system with pthreads
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <a href="https://github.com/boostorg/thread/issues/121">#121</a>
"                      on_tls_prepare is broken under VS2017
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Include &lt;boost/functional/hash.hpp&gt; if required, thanks to
"                Ed Catmur <a href="https://svn.boost.org/trac/boost/ticket/13009">#13009</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use native <code><span class="identifier">hash_code</span><span class="special">()</span></code> when possible on GCC-like compilers
"                <a href="https://svn.boost.org/trac/boost/ticket/13027">#13027</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fix <code><span class="identifier">ctti_type_index</span></code>
"                for GCC 7 and later, thanks to Benjamin Buch <a href="https://github.com/boostorg/type_index/pull/16">PR16</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/typeof/">Typeof</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix compilation error with clang-cl <a href="https://svn.boost.org/trac10/ticket/11821">ticket
"                11821</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Use the same data structure for <code><span class="identifier">unordered_set</span></code>
"                and <code><span class="identifier">unordered_multiset</span></code>,
"                and for<code><span class="identifier">unordered_map</span></code>
"                and <code><span class="identifier">unordered_multimap</span></code>.
"                This is required for C++17, so that nodes can be merged and extracted
"                between compatible containers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Add deprecated attributes to long deprecated functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved use of <code><span class="identifier">allocator_traits</span></code>
"                <code><span class="identifier">construct</span></code> and <code><span class="identifier">destroy</span></code> on C++11 compilers, using
"                piecewise pair construction when appropriate.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fewer workarounds on newer Oracle compilers.
"              </div>
"            </li>
"            <li>
"              <div>
"                Avoid dereferencing pointers to uninitialized memory (<a href="https://github.com/boostorg/unordered/pull/5">PR
"                #5</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved compatibility of <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">next</span></code>/<code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">prior</span></code> with SFINAE-unfriendly iterators.
"                <a href="https://svn.boost.org/trac/boost/ticket/10847">#10847</a>, <a href="https://svn.boost.org/trac/boost/ticket/13002">#13002</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/variant/">Variant</a>:</span>
"          <ul>
"            <li>
"              <div>
"                r-value overload for <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">get</span></code>
"                was added by Albert Sverdlov <a href="https://svn.boost.org/trac/boost/ticket/13018">#13018</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Missing include fro <code><span class="special">&lt;</span><span class="identifier">boost</span><span class="special">/</span><span class="identifier">variant</span><span class="special">/</span><span class="identifier">polymorphic_get</span><span class="special">.</span><span class="identifier">hpp</span><span class="special">&gt;</span></code>
"                header was added by Adam Badura <a href="https://svn.boost.org/trac/boost/ticket/13037">#13037</a>.
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">::</span><span class="identifier">make_variant_over</span></code> was fixed and
"                now works with views and other Forward Sequences (thanks to Mikhail
"                Maksimov for the fix) <a href="https://svn.boost.org/trac/boost/ticket/8554">#8554</a>, <a href="https://svn.boost.org/trac/boost/ticket/10041">#10041</a>, <a href="https://github.com/boostorg/variant/pull/35">PR#35</a>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"
-hash
"82bd3089fd149cf6b30dae14283ce8e1544dc6649d0122d2111ced1f7b700426
-id
"version_1_65_1
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      Bug fixes: Config, Context, Fiber, Smart Pointers, Stacktrace, Thread
"
-title_xml
"Version 1.65.1
)
(feed/history/boost_1_66_0.qbk
-description_xhtml
"
"
"
"  <div id="version_1_66_0.new_libraries">
"    <h3><span class="link">New Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_66_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/atomic/">Atomic</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Implemented a set of experimental extended atomic operations for
"                integral types:
"                <ul>
"                  <li>
"                    <div>
"                      <code><span class="identifier">fetch_negate</span></code>,
"                      <code><span class="identifier">fetch_complement</span></code>
"                      - atomically replaces the value with a negated or binary complemented
"                      value and returns the original value
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="identifier">opaque_</span><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span></code>
"                      - equivalent to <code><span class="identifier">fetch_</span><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span></code> except that it doesn't
"                      return the original value
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span><span class="identifier">_and_test</span></code>
"                      - atomically applies <code><span class="special">&lt;</span><span class="identifier">op</span><span class="special">&gt;</span></code>
"                      and returns <code><span class="keyword">true</span></code>
"                      if the result is zero
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      <code><span class="identifier">bit_test_and_set</span></code>,
"                      <code><span class="identifier">bit_test_and_reset</span></code>,
"                      <code><span class="identifier">bit_test_and_complement</span></code>
"                      - atomically sets, resets or complements the specified bit
"                      and returns the original value of the bit
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Following C++17 (<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0558r1.pdf">P0558R1</a>),
"                arithmetic operations for pointers to non-object types are no longer
"                provided.
"              </div>
"            </li>
"            <li>
"              <div>
"                Also following C++17 exposed <code><span class="identifier">atomic</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;::</span><span class="identifier">value_type</span></code>
"                and <code><span class="identifier">atomic</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;::</span><span class="identifier">difference_type</span></code> member typedefs,
"                where applicable, to the user's code.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved compatibility with gcc 7. In particular, using 128-bit operations
"                on x86-64 should no longer require linking with libatomic (the compiler-supplied
"                library).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/date_time/">DateTime</a>:</span>
"          <ul>
"            <li>
"              <div>
"                The library has been converted to use Boost.WinAPI as the abstraction
"                layer for Windows SDK.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed an integral overflow that could cause incorrect results when
"                adding or subtracting many years from a date (see <a href="https://stackoverflow.com/questions/45537280/boost-datetime-issue-with-adding-long-year-durations">here</a>).
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/iterator/">Iterator</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">next</span><span class="special">()</span></code>/<code><span class="identifier">prior</span><span class="special">()</span></code>
"                functions now support user's iterators that don't specify nested
"                types such as <code><span class="identifier">iterator_category</span></code>,
"                <code><span class="identifier">difference_type</span></code>,
"                etc. and instead specialize <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator_traits</span></code>
"                to define those types. The compiler must support C++17-compatible
"                <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">iterator_traits</span></code> for this to work.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Bug fixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fixed a bug in <code><span class="identifier">file_collector</span><span class="special">::</span><span class="identifier">scan_for_files</span></code>
"                      that could cause incorrectly named log files in the target
"                      directory after the user's application restart.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/multi_index/index.html">Multi-index Containers</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Made <code><span class="identifier">modify</span></code> and
"                <code><span class="identifier">modify_key</span></code> more robust
"                so that the modified element is erased if the modifier throws or
"                the rollback functor does not properly restore the element (full
"                discussion at ticket <a href="https://svn.boost.org/trac/boost/ticket/12542">#12542</a>). This is technically backwards
"                incompatible; for instance, the following code:
"              </div>
"<pre><span class="identifier">c</span><span class="special">.</span><span class="identifier">modify</span><span class="special">(</span><span class="identifier">c</span><span class="special">.</span><span class="identifier">begin</span><span class="special">(),[](</span><span class="keyword">auto</span><span class="special">&amp;){</span><span class="keyword">throw</span> <span class="number">0</span><span class="special">;});</span>
"</pre>
"              <div>
"                keeps the container <code><span class="identifier">c</span></code>
"                untouched in former versions of Boost whereas now <code><span class="identifier">c</span><span class="special">.</span><span class="identifier">begin</span><span class="special">()</span></code> is erased. Thanks to Jon Kalb for
"                raising the issue.
"              </div>
"            </li>
"            <li>
"              <div>
"                Maintenance fixes.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/utility/">Utility</a>:</span>
"          <ul>
"            <li>
"              <div>
"                <code><span class="identifier">boost</span><span class="special">/</span><span class="identifier">next_prior</span><span class="special">.</span><span class="identifier">hpp</span></code> has been moved to Boost.Iterator.
"                No changes needed to the user's code.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_66_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_66_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <em>TODO</em>
"    </p>
"  </div>
"
-hash
"de3fe9ae171b9bdb821ff58bd5b7ea2be05d169acbf72a372fbf7edd94c83f04
-id
"version_1_66_0
-notice_url
-notice_xml
-pub_date
-purpose_xml
"
"      New Libraries: Updated Libraries:
"
-title_xml
"Version 1.66.0
)
