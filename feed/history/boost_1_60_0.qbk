[article Version 1.60.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release date]
    [last-revision ]
]

[import ext.qbk]

[/ Add attributes here as release progresses. See end of file for details. ]
[documentation /doc/libs/master/]
[final_documentation /doc/libs/1_60_0/]

[section Notes for Windows users]

This release of Boost will by default compile for Windows Vista/Windows Server 2008, if the compiler supports a recent enough Windows SDK, and for Windows XP otherwise. Binaries compiled with default options may not run on the older Windows versions.

It is still possible to explicitly specify target Windows version by defining `BOOST_USE_WINAPI_VERSION` to a numeric version of Windows API. For example, building Boost for Windows XP can be done with the following command:

[pre
    b2 release define=BOOST_USE_WINAPI_VERSION=0x0501
]

The list of Windows API version numbers can be seen on [@https://msdn.microsoft.com/en-us/library/6sehtctf.aspx this] page.

This change only concerns libraries that use the common Windows API abstraction layer. Currently, these libraries are: Boost.Chrono, Boost.Dll, Boost.Log, Boost.UUID. This will also affect all dependent libraries.

[endsect]

[section New Libraries]

* [phrase library..[@/libs/vmd/ VMD]:]
  Variadic Macro Data library, from Edward Diener.

[endsect]

[section Updated Libraries]

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * `shared_ptr` is movable and supports aliasing ([ticket 1234]).
]

* [phrase library..[@/libs/atomic/ Atomic]:]
  * Enforced proper alignment of `atomic<>` storage. This should fix possible issues on platforms that support atomic operations on data units larger than the native word size. This may also change binary layout of user's data structures that have `atomic<>` members.
  * Fixed compilation for PowerPC with IBM XL C++ compiler. Corrected memory barriers in PowerPC assembler.
  * Fixed compilation with MSVC-8 for ARM.
  * Fixed compilation with gcc 4.4 for x86-64, when 128-bit atomic operations were used. ([ticket 10994])
  * Optimized some gcc assembler blocks for x86/x86-64 to reduce the number of used registers. This may require binutils 2.10 or later.

* [phrase library..[@/libs/chrono/ Chrono -  2.0.5]:]
  * ['Fixes:]
    * [@http://svn.boost.org/trac/boost/ticket/10778 #10778]	VC14 CTP4 Atomic don't compile with boost::chrono durations which are not TriviallyCopyable
    * [@http://svn.boost.org/trac/boost/ticket/10840 #10840] 	Missing std:: qualifier for puts call in test_7868.cpp
    * [@http://svn.boost.org/trac/boost/ticket/10851 #10851] 	Missing std:: qualifier for puts call in time_point_output.cpp
    * [@http://svn.boost.org/trac/boost/ticket/10893 #10893] 	Minor doc typo in Boost.Chrono
    * [@http://svn.boost.org/trac/boost/ticket/10992 #10992] 	Chrono IO state savers inconsistent with Boost.IO state savers
    * [@http://svn.boost.org/trac/boost/ticket/10995 #10995] 	duration_put::put_value truncates fractional part
    * [@http://svn.boost.org/trac/boost/ticket/11006 #11006] 	Impossible to instantiate time_fmt_io_saver due to several errors.
    * [@http://svn.boost.org/trac/boost/ticket/11012 #11012] 	chrono_io v2 fail to compile with boost::chrono::duration< boost::rational<int> >

* [phrase library..[@/libs/context/ Context]:]
  * [ticket 11603] typo in PPC32/MACH-O asm
  * support for CYGWIN

* [phrase library..[@/libs/core/ Core]:]
  * In symbol demangling tools, added support for gabi++ ABI implementation used in Android NDK.
  * Added a new `enable_if_has_type` tool for performing SFINAE checks for presence of a nested type.

* [phrase library..[@/libs/flyweight/index.html Flyweight]:]
  * Maintenance fixes.

* [phrase library..[@/libs/locale Locale]:]
  * Implemented generic codecvt facet and add general purpose utf8_codecvt facet
  * Added posix locale support for FreeBSD 10.0 and above
  * Fixed issues
    [ticket 10017] (sun redefinition on SunOS),
    [ticket 11163] (set_default_messages_domain incorrect behavior),
    [ticket 11673] build issues
  * Some warning cleanup
  * Fixed tests for latest ICU versions
  * Added workaround for `libc++` issues
  * Added new defines `BOOST_LOCALE_ENABLE_CHAR16_T` and `BOOST_LOCALE_ENABLE_CHAR32_T` to enable C++11 `char16_t` and `char32_t` instead of deprecated ones

* [phrase library..[@/libs/log/ Log]:]
  * General changes:
    * On Windows, the configuration macro `BOOST_LOG_USE_WINNT6_API` is no longer used by the library. The target Windows version should be configured by defining macro `BOOST_USE_WINAPI_VERSION`.
  * Bug fixes:
    * Fixed compilation for Android using Google NDK. ([ticket 11559])
    * Fixed compilation of some logging statements, where the first object to be put into stream is not directly supported by `formatting_ostream`. ([ticket 11549])
    * Added a workaround for Solaris Studio 12.4, which should fix the compilation of `formatting_ostream`. ([ticket 11545])
    * Fixed compilation when native `wchar_t` type is disabled. ([ticket 11541])
    * Fixed exporting symbols from the `boost_log_setup` library on POSIX-like systems.
    * Fixed compilation of character decorators.
    * Added a workaround for incorrect file name generation in text file sink backend, when the file name contains date/time placeholders. ([ticket 11691])
  * See [@/libs/log/doc/html/log/changelog.html changelog] for more details.

* [phrase library..[@/libs/multi_index/index.html Multi-index Containers]:]
  * Fixed an interoperability problem with [@http://www.qt.io/ Qt] due to the
    optional definition of a macro with name `foreach` in this framework.
  * Maintenance fixes.
  
* [phrase library..[@/libs/optional/ Optional]:]
  * Changed the implementation of `boost::none` again. Now it is a const object
    with internal linkage (as any other tag). This fixes [ticket 11203].
  
* [phrase library..[@/libs/predef/ Predef]:]
  * Add detection of SIMD hardware.
  * See [@/libs/predef/doc/html/predef/history.html#predef.history.1_4 history] for more details.

* [phrase library..[@/libs/test/ Test]:]
  * Boost.test v3.1 see the
    '[@/doc/libs/1_60_0/libs/test/doc/html/boost_test/change_log.html Change log]'
    section for details.
  * New features
    * Improved Command Line Interface
    * Improved dataset API
  * Bug fixes
    * [ticket 3384], [ticket 3897], [ticket 6032], [ticket 6859], [ticket 7257]
    * [ticket 9228], [ticket 10317], [ticket 11279], [ticket 11478]
    * [ticket 11571], [ticket 11623], [ticket 11624], [ticket 11625]

* [phrase library..[@/libs/thread/ Thread - 4.6.0]:]
  ['New Experimental Features:]
    * [@http://svn.boost.org/trac/boost/ticket/11231 #11231] Allow to set continuation future's destructor behavior to non-blocking
    * [@http://svn.boost.org/trac/boost/ticket/11424 #11424] Provide shared_timed_mutex as an alternative name for shared_mutex and deprecate the use of shared_mutex as a timed mutex
    * [@http://svn.boost.org/trac/boost/ticket/11734 #11734] future::then(Cont) should be able to execute the contination on undetermined thread
    * [@http://svn.boost.org/trac/boost/ticket/11736 #11736] Allow to use launch::executor on future::then(launch::executor, cont)
    * [@http://svn.boost.org/trac/boost/ticket/11737 #11737] Add a launch::inherit policy that can be used on ::then() to use the policy of the parent future
  ['Fixed Bugs:]
    * [@http://svn.boost.org/trac/boost/ticket/3926 #3926] thread_specific_ptr + dlopen library causes a SIGSEGV.
    * [@http://svn.boost.org/trac/boost/ticket/6377 #6377] Condition variable blocks when changing time
    * [@http://svn.boost.org/trac/boost/ticket/6787 #6787] boost::thread::sleep() hangs if system time is rolled back
    * [@http://svn.boost.org/trac/boost/ticket/7665 #7665] this_thread::sleep_for no longer uses steady_clock in thread
    * [@http://svn.boost.org/trac/boost/ticket/7720 #7720] exception lock_error while intensive locking/unlocking of mutex
    * [@http://svn.boost.org/trac/boost/ticket/9309 #9309] test_latch fails often on clang-darwin-tot11
    * [@http://svn.boost.org/trac/boost/ticket/10788 #10788] GetLogicalProcessor isn't available for Windows platform less or equals to 0x0502
    * [@http://svn.boost.org/trac/boost/ticket/11090 #11090] ex_future_unwrap- ThreadSanitizer: lock-order-inversion (potential deadlock)
    * [@http://svn.boost.org/trac/boost/ticket/11158 #11158] Pthread thread deadlock when faketime used
    * [@http://svn.boost.org/trac/boost/ticket/11174 #11174] boost::condition_variable::timed_wait with predicate unexpectedly wakes up while should wait infinite
    * [@http://svn.boost.org/trac/boost/ticket/11185 #11185] Incorrect URL redirection
    * [@http://svn.boost.org/trac/boost/ticket/11192 #11192] boost::future<>::then() with an executor doesn't compile when the callback returns a future
    * [@http://svn.boost.org/trac/boost/ticket/11250 #11250] future made from make_exceptional fails on assertion in destructor
    * [@http://svn.boost.org/trac/boost/ticket/11256 #11256] future<>::is_ready() == false in continuation function
    * [@http://svn.boost.org/trac/boost/ticket/11261 #11261] bad use of scoped threads in basic_thread_pool
    * [@http://svn.boost.org/trac/boost/ticket/11262 #11262] bad use of direct pointer in shared_state_nullary_task
    * [@http://svn.boost.org/trac/boost/ticket/11263 #11263] lock already locked lock
    * [@http://svn.boost.org/trac/boost/ticket/11266 #11266] boost::packaged_task has invalid variadic signature
    * [@http://svn.boost.org/trac/boost/ticket/11302 #11302] boost thread doesn't build with BOOST_THREAD_PATCH.
    * [@http://svn.boost.org/trac/boost/ticket/11322 #11322] sleep_for() nanoseconds overload will always return too early on windows
    * [@http://svn.boost.org/trac/boost/ticket/11329 #11329] using declarative for GetProcessHeap, .... fails
    * [@http://svn.boost.org/trac/boost/ticket/11368 #11368] boost thread's usage of CreateWaitableTimer wakes PC from sleep (doh)
    * [@http://svn.boost.org/trac/boost/ticket/11377 #11377] Boost condition variable always waits for system clock deadline
    * [@http://svn.boost.org/trac/boost/ticket/11435 #11435] gcc compiler warning in future.hpp
    * [@http://svn.boost.org/trac/boost/ticket/11555 #11555] devector.hpp assumes allocator_traits_type is always present
    * [@http://svn.boost.org/trac/boost/ticket/11562 #11562] Timer (using steady_clock) expires after computer time is set forward on Ubuntu 64-bit
    * [@http://svn.boost.org/trac/boost/ticket/11672 #11672] Thread: Should use unique_ptr, not auto_ptr
    * [@http://svn.boost.org/trac/boost/ticket/11688 #11688] thread::try_join_until: Avoid busy wait if system clock changes
    * [@http://svn.boost.org/trac/boost/ticket/11672 #11716] ::then(f) should inherit the parent Executor
  
* [phrase library..[@/libs/uuid/ UUID]:]
  * Added a workaround for MSVC codegen bug that could cause crashes when comparing UUIDs.
  * Added detection of AVX being enabled with MSVC compiler switches.

* /TODO/

[/ TODO: These libraries always use the same message, referring to their
   individual release notes. So check if they apply before the beta:

* /TODO/: [phrase library..[@/libs/spirit/ Spirit]:]
  * Spirit Vx.x, see the
    '[@/doc/libs/1_60_0/libs/spirit/doc/html/spirit/what_s_new/spirit_x_x.html What's New]'
    section for details.

* /TODO/: [phrase library..[@/libs/wave/ Wave]:]
  * See the [@/libs/wave/ChangeLog Changelog] for details.

]

[endsect]

[section News]

[section Release of Hana postponed]

Due to time constraints, the release of [@https://github.com/boostorg/hana Hana]
will be postponed to a later release of Boost. This will also allow some known
issues to be addressed properly before releasing the library officially as a
part of Boost. More information can be found on the
[@http://article.gmane.org/gmane.comp.lib.boost.devel/263964 mailing list].

[endsect]

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* Linux:
  * Clang: 3.4, 3.6
  * Clang, C++14: 3.7
  * GCC: 4.4.7, 4.8.4, 4.9.3, 5.1.0, 5.2.1
  * GCC, C++11: 4.4.7
  * GCC, C++14: 4.9.3
* Windows:
  * GCC, C++03, mingw: 3.4.5
  * GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1
  * GCC, C++14, mingw: 4.9.3, 5.1.0
  * Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
* Android:
  * Clang: 3.6, 3.7
  * GCC: 4.9.0, 5.2.0
* QNX:
  * QCC: 4.4.2
* SunOS:
  * Oracle Solaris Studio: 12.4, 12.5

Boost's additional test compilers include:

* Linux:
  * Clang: 3.0, 3.1, 3.2, 3.3, 3.4.2, 3.6.0, 3.8.0
  * Clang, C++14: 3.7.0
  * GCC: 4.4.7, 4.5.3, 4.6.4, 4.7.3, 4.8.1, 4.9.3, 5.1.0, 6.0.0
  * GCC, C++11: 4.4.7
  * GCC, C++14: 4.9.3, 5.2.1
  * IBM XL C++: 13.1.2.0
  * Intel: 16.0
* OS X:
  * Clang: 7.0.0
  * GCC: 5.2.0
* Windows:
  * GCC, C++03, mingw: 3.4.5
  * GCC, C++11, mingw: 4.7.3, 4.8.1
  * GCC, C++14, mingw: 4.9.3, 5.1.0
  * Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
* Android:
  * Clang: 3.6, 3.7
  * GCC: 4.9.0, 5.2.0
* FreeBSD:
  * Clang: 3.4.1, 3.7
  * GCC: 4.8.5, 5.2.0, 6.0.0
* QNX:
  * QCC: 4.4.2
* SunOS:
  * Oracle Solaris Studio: 12.4, 12.5

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

[/
For Beta release, something like:

[status beta]
[download http://sourceforge.net/projects/boost/files/boost/1.60.0.beta.1/]
[download_basename boost_1_60_0_b1]
[documentation /doc/libs/1_60_0_b1/]

Add libraries to 'purpose field'.

For final release:

[status released]
[download http://sourceforge.net/projects/boost/files/boost/1.60.0/]
[download_basename boost_1_60_0]
[documentation /doc/libs/1_60_0/]

Fill in 'authors' field, and date (I normally just copy the date from
the email requesting that I update the site).

Remove this comment.
]
