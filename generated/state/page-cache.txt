(feed/history/boost_1_63_0.qbk
-description_xhtml
"
"  
"  
"  <div id="version_1_63_0.updated_libraries">
"    <h3><span class="link">Updated Libraries</span></h3>
"    <ul>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/atomic/">Atomic</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added the static constant <code><span class="identifier">atomic</span><span class="special">&lt;</span><span class="identifier">T</span><span class="special">&gt;::</span><span class="identifier">is_always_lock_free</span></code>
"                for conformance with C++17. The constant indicates that the given
"                specialization always provides lock-free implementation of atomic
"                operations.
"              </div>
"            </li>
"            <li>
"              <div>
"                Improved support of Oracle Studio on x86 targets.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fiber/">Fiber</a>:</span>
"          <ul>
"            <li>
"              <div>
"                unbounded_channel and bounded_channel marked as deprecated
"              </div>
"            </li>
"            <li>
"              <div>
"                new classes buffered_channel and unbuffered_channel
"              </div>
"            </li>
"            <li>
"              <div>
"                performance improved
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/fusion/">Fusion</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed <code><span class="identifier">fusion</span><span class="special">::</span><span class="identifier">vector</span></code> buggy constructors (Thanks
"                to Lee Clagett).
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">BOOST_FUSION_ADAPT</span><span class="special">*</span></code> and <code><span class="identifier">BOOST_FUSION_DEFINE</span><span class="special">*</span></code> now allow empty structures. (<a href="https://svn.boost.org/trac/boost/ticket/6592">#6592</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                <code><span class="identifier">BOOST_FUSION_DEFINE</span><span class="special">*</span></code> allows move constructor and assignment.
"                (<a href="https://svn.boost.org/trac/boost/ticket/10099">#10099</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Adaptor for <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">array</span></code> (Thanks to Mateusz ≈Åoskot).
"                (<a href="https://svn.boost.org/trac/boost/ticket/8241">#8241</a>)
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed returning temporary variable warnings on MSVC.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/functional/hash">Hash</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fixed some warnings.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/log/">Log</a>:</span>
"          <ul>
"            <li>
"              <div>
"                General changes:
"                <ul>
"                  <li>
"                    <div>
"                      Removed the previously deprecated <code><span class="identifier">type_info_wrapper</span></code>.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                New features:
"                <ul>
"                  <li>
"                    <div>
"                      Added a way to access the current file name from the text file
"                      sink backend. The file name can be obtained with the <code><span class="identifier">get_current_file_name</span></code> method.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                Bug fixes:
"                <ul>
"                  <li>
"                    <div>
"                      Fixed compilation errors for Android API prior to version 21.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      Streaming operators now take scalar types and enums by value.
"                      This allows to output static constants and bitfields directly
"                      into formatting stream and record stream. (<a href="https://svn.boost.org/trac/boost/ticket/11998">#11998</a>)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      In UDP socket based syslog backend implementation, changed
"                      the syslog message format for better compliance with RFC3164.
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      File close handler installed in text file sink backend is no
"                      longer called if the file is not open yet.
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"            <li>
"              <div>
"                See <a href="/libs/log/doc/html/log/changelog.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/metaparse/">Metaparse</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Improved the implementation of <code><span class="identifier">BOOST_METAPARSE_STRING</span></code>
"                <ul>
"                  <li>
"                    <div>
"                      The maximal string length limit has been increased to 2048
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      The maximal string length limit can be extended beyond 2048
"                      by regenerating some of the Boost headers using a script (part
"                      of the library)
"                    </div>
"                  </li>
"                  <li>
"                    <div>
"                      The string length limit can be changed within a compilation
"                      unit
"                    </div>
"                  </li>
"                </ul>
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/phoenix/">Phoenix</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Most of modules now support C++11 variadic templates.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed type deduction failure with result type.
"              </div>
"            </li>
"            <li>
"              <div>
"                Suppress unused warnings.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed too few arguments error on binary math functions.
"              </div>
"            </li>
"            <li>
"              <div>
"                Added workarounds for older compiler.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/python/">Python</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added (basic) support for C++11 (std::shared_ptr, std::unique_ptr)
"              </div>
"            </li>
"            <li>
"              <div>
"                Incorporated an extension API to wrap <a href="http://www.numpy.org/">NumPy</a>
"              </div>
"            </li>
"            <li>
"              <div>
"                Removed obsolete bits and pieces
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/type_index/">TypeIndex</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Added <code><span class="identifier">runtime_cast</span></code>
"                to the library as an emulation of <code><span class="keyword">dynamic_cast</span></code>.
"                Thanks to Chris Glover for the implementation. See <a href="/doc/html/boost_typeindex_header_reference.html#header.boost.type_index.runtime_cast_hpp">runtime_cast
"                reference</a> for more info.
"              </div>
"            </li>
"            <li>
"              <div>
"                Internals of the CTTI were made more platform independant, due to
"                change of the <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">size_t</span></code>
"                type to <code><span class="keyword">unsigned</span> <span class="keyword">int</span></code>.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/units/">Units</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix inspection warnings
"              </div>
"            </li>
"            <li>
"              <div>
"                updated physico-chemical constants to CODATA 2014 values
"              </div>
"            </li>
"            <li>
"              <div>
"                define biot correctly as 10 Ampere
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <span class="library"><a href="/libs/unordered/">Unordered</a>:</span>
"          <ul>
"            <li>
"              <div>
"                Fix an exception safety issue in assignment.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use <code><span class="identifier">std</span><span class="special">::</span><span class="identifier">allocator_traits</span></code> where available,
"                and support modern style rebind (<a href="https://svn.boost.org/trac/boost/ticket/12459">#12459</a>).
"              </div>
"            </li>
"            <li>
"              <div>
"                Add some allocator aware constructors.
"              </div>
"            </li>
"            <li>
"              <div>
"                Use the hint iterator in <code><span class="identifier">emplace_hint</span></code>.
"              </div>
"            </li>
"            <li>
"              <div>
"                Fixed some warnings.
"              </div>
"            </li>
"            <li>
"              <div>
"                See the <a href="/doc/html/unordered/changes.html">changelog</a>
"                for more details.
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          <em>TODO</em>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_63_0.compilers_tested">
"    <h3><span class="link">Compilers Tested</span></h3>
"    <p>
"      Boost's primary test compilers are:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5, 3.6, 3.7, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.2.0, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.3, 5.2.0, 6.1.1, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.2.0, 5.3.0, 6.1.1, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0, 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Apple Clang: 7.0.2
"              </div>
"            </li>
"            <li>
"              <div>
"                Apple Clang, C++11: 7.0.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, C++03, mingw: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14, mingw: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4, 6.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"    <p>
"      Boost's additional test compilers include:
"    </p>
"    <ul>
"      <li>
"        <div>
"          Linux:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.0, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++11: 3.0, 3.1, 3.2, 3.3, 3.4, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++14: 3.5, 3.6, 3.7, 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Clang, C++1z: 3.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.4.7, 4.5.3, 4.6.3, 4.7.2, 5.2.0, 6.1.1, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11: 4.4.7, 4.7.2, 4.7.3, 4.8.5, 4.9.3, 5.2.0, 6.1.1, 6.2.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14: 5.2.0, 5.3.0, 6.1.1, 6.2.0, 7.0.0 (experimental)
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++1z: 6.1.1
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++11: 16.0, 17.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Intel, C++14: 16.0, 17.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          OS X:
"          <ul>
"            <li>
"              <div>
"                Apple Clang: 7.0.2
"              </div>
"            </li>
"            <li>
"              <div>
"                Apple Clang, C++11: 7.0.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Windows:
"          <ul>
"            <li>
"              <div>
"                GCC, C++03, mingw: 3.4.5, 4.1.2, 4.2.4, 4.3.3, 4.4.0
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++11, mingw: 4.6.4, 4.7.3, 4.8.1
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC, C++14, mingw: 4.9.3, 5.1.0, 5.2.0, 5.3.0, 6.1.0
"              </div>
"            </li>
"            <li>
"              <div>
"                Visual C++: 7.1, 8.0, 9.0, 10.0, 11.0, 12.0, 14.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          Android:
"          <ul>
"            <li>
"              <div>
"                Clang: 3.6, 3.7, 3.8
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC: 4.9, 5.4, 6.2
"              </div>
"            </li>
"            <li>
"              <div>
"                GCC,C++14: 6.1.0
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          QNX:
"          <ul>
"            <li>
"              <div>
"                QCC: 4.4.2
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"      <li>
"        <div>
"          SunOS:
"          <ul>
"            <li>
"              <div>
"                Oracle Solaris Studio: 12.5
"              </div>
"            </li>
"            <li>
"              <div>
"                Oracle Solaris Studio, C++11: 12.5
"              </div>
"            </li>
"          </ul>
"        </div>
"      </li>
"    </ul>
"  </div>
"  <div id="version_1_63_0.acknowledgements">
"    <h3><span class="link">Acknowledgements</span></h3>
"    <p>
"      <a href="/users/people/beman_dawes.html">Beman Dawes</a>, Eric Niebler,
"      <a href="/users/people/rene_rivera.html">Rene Rivera</a>, Daniel James,
"      Vladimir Prus and Marshall Clow managed this release.
"    </p>
"  </div>
"
-hash
"0081c9cc9c2765bd820064f8d7426f39f0ba091e46d5e316a895beabcaffd103
)
