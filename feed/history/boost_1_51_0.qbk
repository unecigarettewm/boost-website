[article Version 1.51.0
    [quickbook 1.5]
    [source-mode c++]
    [purpose New Libraries: Updated Libraries: ]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/

As the release progresses add the 'status' and 'download' elements to
indicate the release status:

Beta status:
[status beta]
[download http://sourceforge.net/projects/boost/files/boost/1.xx.x_beta.x/]

Release status:
[status released]
[download http://sourceforge.net/projects/boost/files/boost/1.xx.x/]

]

[/
    When adding libraries:

    1. Libraries are listed in alphabetical order.
    2. Besides the dedicated entry, the lib name should be added to the
       [purpose] section at the beginning of the page.

]

[section New Libraries]

* [phrase library..[@/libs/context/ Context]:]
  Context switching library, from Oliver Kowalke.

[endsect]

[section Updated Libraries]

* /TODO/: This list is incomplete.

* [phrase library..[@/libs/chrono/ Chrono]:]
  * [@http://svn.boost.org/trac/boost/ticket/6918 #6918] Boost Chrono
    compilation failure on HP uX due to undefined pthread_getcpuclockid.
  * [@http://svn.boost.org/trac/boost/ticket/6241 #6241] boost::chrono
    compilation problems without std::wstring support.
  * [@http://svn.boost.org/trac/boost/ticket/6987 #6987] Documentation &
    C++11.
  * [@http://svn.boost.org/trac/boost/ticket/7041 #7041] time_point.hpp
    depends on Boost.System.
  * [@http://svn.boost.org/trac/boost/ticket/7042 #7042] Avoiding time_point
    and duration dependency on time.h and CLOCK_REALTIME.
  * [@http://svn.boost.org/trac/boost/ticket/7058 #7058] Make it work when
    BOOST_NO_EXCEPTIONS is defined.
  * [@http://svn.boost.org/trac/boost/ticket/7069 #7069] Misspellings in
    clock_string<thread_clock>.
  * [@http://svn.boost.org/trac/boost/ticket/7081 #7081] WinError.h
    capitalization in boost/detail/win/basic_types.hpp.

* [phrase library..[@/libs/functional/hash/ Hash]:]
  * Support the standard smart pointers.
  * `hash_value` now implemented using SFINAE to avoid implicit casts to built
    in types when calling it.

* [phrase library..[@/libs/proto/ Proto]:]
  * Proto transforms get pseudo-parameter pack expansion support for unpacking
    expressions. See the 
    [@/doc/html/proto/appendices.html#boost_proto.appendices.release_notes.boost_1_51 Release Notes]
    for more information.

* [phrase library..[@/libs/ratio/ Ratio]:]
  * [@http://svn.boost.org/trac/boost/ticket/7075 #7075] Workaround for
    error: the type of partial specialization template parameter constant "n1"
    depends on another template parameter.

* [phrase library..[@/libs/thread/ Thread]:]
  * [@http://svn.boost.org/trac/boost/ticket/4258 #4258] Linking with boost
    thread does not work on mingw/gcc 4.5.
  * [@http://svn.boost.org/trac/boost/ticket/4885 #4885] Access violation in
    set_tss_data at process exit due to invalid assumption about TlsAlloc.
  * [@http://svn.boost.org/trac/boost/ticket/6931 #6931] mutex waits
    forwever with Intel Compiler and /debug:parallel
  * [@http://svn.boost.org/trac/boost/ticket/7044 #7044] boost 1.50.0 header
    missing.
  * [@http://svn.boost.org/trac/boost/ticket/7052 #7052] Thread:
    BOOST_THREAD_PROVIDES_DEPRECATED_FEATURES_SINCE_V3_0_0 only masks
    thread::operator==, thread::operator!= forward declarations, not
    definitions.
  * [@http://svn.boost.org/trac/boost/ticket/7066 #7066] An attempt to fix
    current_thread_tls_key static initialization order.
  * [@http://svn.boost.org/trac/boost/ticket/7074 #7074] Multiply defined
    symbol boost::allocator_arg.
  * [@http://svn.boost.org/trac/boost/ticket/7078 #7078] Trivial 64-bit
    warning fix on Windows for thread attribute stack size
  * [@http://svn.boost.org/trac/boost/ticket/7089 #7089]
    BOOST_THREAD_WAIT_BUG limits functionality without solving anything

* [phrase library..[@/libs/unordered/ Unordered]:]
  * Fix construction/destruction issue when using a C++11 compiler with a
    C++03 allocator ([ticket 7100]).

* [phrase library..[@/libs/wave/ Wave]:]
  * See the [@/libs/wave/ChangeLog Changelog] for details.

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* Linux:
  * GCC: 4.2.4, 4.3.4, 4.4.3, 4.5.3, 4.6.2, 4.7
  * GCC, C++11 mode: 4.3.4, 4.4.3, 4.5.3, 4.6.2
  * Intel: 11.1, 12.0, 12.1
  * LLVM Clang 2.8
* OS X:
  * GCC: 4.4
  * GCC, C++11 mode: 4.4
  * Intel: 11.1, 12.0
* Windows:
  * GCC, mingw: 4.4.0, 4.4.7, 4.5.4, 4.6.3
  * Visual C++: 8.0, 9.0, 10.0
* FreeBSD:
  * GCC: 4.2.1, 32 and 64 bit

Boost's additional test compilers include:

* Linux:
  * Clang: from subversion
  * LLVM Clang: 3.0
  * GCC: 4.2.4, 4.3.4, 4.4.4, 4.4.7, 4.5.3, 4.6.2, 4.6.3, 4.7.0, 4.7.1
  * GCC, C++11 mode: 4.3.4, 4.4.4, 4.5.3, 4.6.3
  * pgCC: 11.9
  * Intel: 10.1, 11.1, 12.0, 12.1
  * Visual Age: 10.1
* OS X:
  * Clang: from subversion
  * Clang, C++11 mode: from subversion
  * Intel: 11.1, 12.0
  * GCC: 4.4
  * GCC, C++11 mode: 4.4
* Windows:
  * Visual C++: 8.0, 9.0, 10.0
  * GCC, mingw: 4.4.0, 4.6.3, 4.7.0
* AIX:
  * IBM XL C/C++ Enterprise Edition: V12.1.0.0
* FreeBSD:
  * GCC: 4.2.1, 32 and 64 bit
* Solaris:
  * Sun: 5.10

[endsect]

[section Acknowledgements]

[@/users/people/beman_dawes.html Beman Dawes],
Eric Niebler,
[@/users/people/rene_rivera.html Rene Rivera],
Daniel James, Vladimir Prus and Marshall Clow
managed this release.

[endsect]

