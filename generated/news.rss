<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:boostbook="urn:boost.org:boostbook">
  <channel>
    <generator>Boost Website Site Tools</generator>
    <title>Boost News</title>
    <link>http://www.boost.org/users/news/</link>
    <description/>
    <language>en-us</language>
    <copyright>Distributed under the Boost Software License, Version 1.0. (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)</copyright>
  <item><title>Version 1.49.0</title><link>http://www.boost.org/users/history/version_1_49_0.html</link><guid>http://www.boost.org/users/history/version_1_49_0.html</guid><pubDate>Fri, 24 Feb 2012 16:20:32 -0500</pubDate><description>



  &lt;div id=&quot;version_1_49_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/heap/index.html&quot;&gt;Heap&lt;/a&gt;:&lt;/span&gt;
  Priority queue data
          structures, from Tim Blechmann.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_49_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/asio&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added a new class template &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;basic_waitable_timer&lt;/span&gt;&lt;/code&gt;
                based around the C++11 clock type requirements. It may be used with
                the clocks from the C++11 &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;chrono&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
                library facility or, if those are not available, Boost.Chrono. The
                typedefs &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;high_resolution_timer&lt;/span&gt;&lt;/code&gt;,
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;steady_timer&lt;/span&gt;&lt;/code&gt; and
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;system_timer&lt;/span&gt;&lt;/code&gt; may
                be used to create timer objects for the standard clock types.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added a new &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;windows&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;object_handle&lt;/span&gt;&lt;/code&gt;
                class for performing waits on Windows kernel objects. Thanks go to
                Boris Schaeling for contributing substantially to the development
                of this feature.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                On Linux, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; can return EAGAIN in certain circumstances.
                Remapped this to another error so that it doesn't look like a non-blocking
                operation (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6048&quot;&gt;#6048&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed a compile error on NetBSD (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6098&quot;&gt;#6098&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed deadlock on Mac OS X (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6275&quot;&gt;#6275&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed a regression in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;buffered_write_stream&lt;/span&gt;&lt;/code&gt;
                (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6310&quot;&gt;#6310&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed a non-paged pool &amp;quot;leak&amp;quot; on Windows when an &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;io_service&lt;/span&gt;&lt;/code&gt; is repeatedly run without
                anything to do (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6321&quot;&gt;#6321&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Reverted earlier change to allow some speculative operations to be
                performed without holding the lock, as it introduced a race condition
                in some multithreaded scenarios.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed a bug where the second buffer in an array of two buffers may
                be ignored if the first buffer is empty.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/chrono&quot;&gt;Chrono&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug Fixes:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6092&quot;&gt;#6092&lt;/a&gt;
                      Input from non integral durations makes the compiler fail.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6093&quot;&gt;#6093&lt;/a&gt;
                      [1/3]second fails as valid duration input.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6113&quot;&gt;#6113&lt;/a&gt;
                      duplicate symbol when BOOST_CHRONO_HEADER_ONLY is defined.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6243&quot;&gt;#6243&lt;/a&gt;
                      Sandia-pgi-11.9: more than one instance of overloaded function
                      &amp;quot;min&amp;quot; matches.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6257&quot;&gt;#6257&lt;/a&gt;
                      process_cpu_clock::now() on linux gives time_points 1/1000
                      times.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/container/&quot;&gt;Container&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6499&quot;&gt;#6499&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6336&quot;&gt;#6336&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6335&quot;&gt;#6335&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6287&quot;&gt;#6287&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6205&quot;&gt;#6205&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4383&quot;&gt;#4383&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;allocator_traits&lt;/span&gt;&lt;/code&gt;
                support for both C++11 and C++03 compilers through an internal &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;allocator_traits&lt;/span&gt;&lt;/code&gt; clone.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/filesystem/&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3714&quot;&gt;#3714&lt;/a&gt;,
                Added test cases and fixes for class path errors when assignment
                or append used self or portion of self as source.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4889&quot;&gt;#4889&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6320&quot;&gt;#6320&lt;/a&gt;,
                Locale codecvt_facet not thread safe on Windows. Move Windows, Mac
                OS X, locale and codecvt facet back to namespace scope. POSIX except
                OS X uses local static initialization (IE lazy) to ensure exceptions
                are catchable if environmental variables are misconfigured and to
                avoid use of locale(&amp;quot;&amp;quot;) if not actually used.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5652&quot;&gt;#5652&lt;/a&gt;,
                recursive_directory_iterator fails on cyclic symbolic links. Thanks
                to Daniel Aarno for the patch.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5653&quot;&gt;#5653&lt;/a&gt;,
                recursive_directory_iterator(error_code) can still throw filesystem_error.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5900&quot;&gt;#5900&lt;/a&gt;,
                directory_iterator access violation on Windows if error is thrown.
                Thanks to Andreas Eckleder for the patch.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5900&quot;&gt;#5900&lt;/a&gt;
                comment 2, a bug in director_iterator construction with error_code
                argument that caused increment to be called without the ec argument
                being passed.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5989&quot;&gt;#5989&lt;/a&gt;
                by cleaning up test suite path_test.cpp code even though the ticket
                itself was not a defect, and clarifying docs; iteration over a path
                yields generic format.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5592&quot;&gt;#5592&lt;/a&gt;,
                Change Windows codecvt processing from CP_THREAD_ACP to CP_ACP.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Operations function fixes for PGI compiler, thanks to Noel Belcourt.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Relax permissions test to reflect reality, particularly on the Sandia
                test platforms.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/geometry/&quot;&gt;Geometry&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Distance for multi-geometries ignored specified distance strategy.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      In difference for polygon/multi_polygon (reported 2011/10/24
                      on GGL-list).
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Raise exception for calculation of distances of multi-geometrie(s)
                      where one of them is empty
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Multi DSV did not correctly use settings.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Self-intersections could sometimes be missed (introduced in
                      1.48).
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Convex hull crashed on empty range (e.g. empty multi point).
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Solved tickets
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6028&quot;&gt;#6028&lt;/a&gt;
                      Documentation: closure.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6178&quot;&gt;#6178&lt;/a&gt;
                      Missing headerfile.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6021&quot;&gt;#6021&lt;/a&gt;
                      convex hull of multipoint.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Additional functionality
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Support for line/polygon intersections and differences
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Support for convert of segment/box of different point types
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Support for append for multi point
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Scalar functions (distance, area, length, perimeter) now throw
                      an empty_input_exception on empty input
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Documentation
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Updated support status
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Internal changes
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Updates in specializations/not_implemented for distance/convert/assign/area
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Move of wkt/dsv to io folder, making domains redundant
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Strategy concepts assigned to zero to avoid clang warnings
                      (patched by Vishnu)
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/graph/&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5881&quot;&gt;#5881&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6033&quot;&gt;#6033&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6061&quot;&gt;#6061&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6137&quot;&gt;#6137&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6246&quot;&gt;#6246&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6239&quot;&gt;#6239&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6293&quot;&gt;#6293&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6306&quot;&gt;#6306&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6313&quot;&gt;#6313&lt;/a&gt;
                and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6371&quot;&gt;#6371&lt;/a&gt;,
                plus others not in Trac.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Re-enabled LEDA graph support (thanks to Jens Muller for the patch).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added documentation for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;edge_predecessor_recorder&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/icl/&quot;&gt;Icl&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed tickets &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6095&quot;&gt;#6095&lt;/a&gt;
                and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6210&quot;&gt;#6210&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added move semantics for constructors, assignment operators and binary
                operators.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/interprocess/&quot;&gt;Interprocess&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6531&quot;&gt;#6531&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6412&quot;&gt;#6412&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6398&quot;&gt;#6398&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6340&quot;&gt;#6340&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6319&quot;&gt;#6319&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6287&quot;&gt;#6287&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6265&quot;&gt;#6265&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6233&quot;&gt;#6233&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6147&quot;&gt;#6147&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6134&quot;&gt;#6134&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6058&quot;&gt;#6058&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6054&quot;&gt;#6054&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5772&quot;&gt;#5772&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5738&quot;&gt;#5738&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5622&quot;&gt;#5622&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5552&quot;&gt;#5552&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5518&quot;&gt;#5518&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4655&quot;&gt;#4655&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4452&quot;&gt;#4452&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4383&quot;&gt;#4383&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4297&quot;&gt;#4297&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed timed functions in mutex implementations to fulfill POSIX requirements:
                &lt;em&gt;Under no circumstance shall the function fail with a timeout
                if the mutex can be locked immediately. The validity of the abs_timeout
                parameter need not be checked if the mutex can be locked immediately.&lt;/em&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/intrusive/&quot;&gt;Intrusive&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6347&quot;&gt;#6347&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6223&quot;&gt;#6223&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6153&quot;&gt;#6153&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/conversion/lexical_cast.htm&quot;&gt;Lexical cast&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs and warnings: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6127&quot;&gt;#6127&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6132&quot;&gt;#6132&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6159&quot;&gt;#6159&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6182&quot;&gt;#6182&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6186&quot;&gt;#6186&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6193&quot;&gt;#6193&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6264&quot;&gt;#6264&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6290&quot;&gt;#6290&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6298&quot;&gt;#6298&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6400&quot;&gt;#6400&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better performance and less memory usage for boost::container::basic_string
                conversions.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/locale/&quot;&gt;Locale&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed incorrect use of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;MultiByteToWideChar&lt;/span&gt;&lt;/code&gt;
                in detection of invalid input sequences.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/move/&quot;&gt;Move&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6417&quot;&gt;#6417&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6183&quot;&gt;#6183&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6185&quot;&gt;#6185&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6395&quot;&gt;#6395&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6396&quot;&gt;#6396&lt;/a&gt;,
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/property_tree&quot;&gt;PropertyTree&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixes for bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4840&quot;&gt;#4840&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5259&quot;&gt;#5259&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5281&quot;&gt;#5281&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5944&quot;&gt;#5944&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5757&quot;&gt;#5757&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5710&quot;&gt;#5710&lt;/a&gt;,
                and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5307&quot;&gt;#5307&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Spirit V2.5.2, see the '&lt;a href=&quot;http://www.boost.org/doc/libs/1_49_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_5_2.html&quot;&gt;What's
                New&lt;/a&gt;' section for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/thread&quot;&gt;Thread&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed Bugs:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/2309&quot;&gt;#2309&lt;/a&gt;
                      Lack of g++ symbol visibility support in Boost.Thread.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/2639&quot;&gt;#2639&lt;/a&gt;
                      documentation should be extended(defer_lock, try_to_lock, ...).
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/3639&quot;&gt;#3639&lt;/a&gt;
                      Boost.Thread doesn't build with Sun-5.9 on Linux.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/3762&quot;&gt;#3762&lt;/a&gt;
                      Thread can't be compiled with winscw (Codewarrior by Nokia).
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/3885&quot;&gt;#3885&lt;/a&gt;
                      document about mix usage of boost.thread and native thread
                      api.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/3975&quot;&gt;#3975&lt;/a&gt;
                      Incorrect precondition for promise::set_wait_callback().
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/4048&quot;&gt;#4048&lt;/a&gt;
                      thread::id formatting involves locale
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/4315&quot;&gt;#4315&lt;/a&gt;
                      gcc 4.4 Warning: inline ... declared as dllimport: attribute
                      ignored.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/4480&quot;&gt;#4480&lt;/a&gt;
                      OpenVMS patches for compiler issues workarounds.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/4819&quot;&gt;#4819&lt;/a&gt;
                      boost.thread's documentation misprints.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5040&quot;&gt;#5040&lt;/a&gt;
                      future.hpp in boost::thread does not compile with /clr.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5423&quot;&gt;#5423&lt;/a&gt;
                      thread issues with C++0x.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5502&quot;&gt;#5502&lt;/a&gt;
                      race condition between shared_mutex timed_lock and lock_shared.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5594&quot;&gt;#5594&lt;/a&gt;
                      boost::shared_mutex not fully compatible with Windows CE.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5617&quot;&gt;#5617&lt;/a&gt;
                      boost::thread::id copy ctor.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5739&quot;&gt;#5739&lt;/a&gt;
                      set-but-not-used warnings with gcc-4.6.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5826&quot;&gt;#5826&lt;/a&gt;
                      threads.cpp: resource leak on threads creation failure.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5839&quot;&gt;#5839&lt;/a&gt;
                      thread.cpp: ThreadProxy leaks on exceptions.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5859&quot;&gt;#5859&lt;/a&gt;
                      win32 shared_mutex constructor leaks on exceptions.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6100&quot;&gt;#6100&lt;/a&gt;
                      Compute hardware_concurrency() using get_nprocs() on GLIBC
                      systems.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6141&quot;&gt;#6141&lt;/a&gt;
                      Compilation error when boost.thread and boost.move are used
                      together.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6168&quot;&gt;#6168&lt;/a&gt;
                      recursive_mutex is using wrong config symbol (possible typo).
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6175&quot;&gt;#6175&lt;/a&gt;
                      Compile error with SunStudio.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6200&quot;&gt;#6200&lt;/a&gt;
                      patch to have condition_variable and mutex error better handle
                      EINTR.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6207&quot;&gt;#6207&lt;/a&gt;
                      shared_lock swap compiler error on clang 3.0 c++11.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/6208&quot;&gt;#6208&lt;/a&gt;
                      try_lock_wrapper swap compiler error on clang 3.0 c++11.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/unordered&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                On compilers without rvalue references, the containers are no longer
                movable by default, as move emulation was causing some odd quirks
                (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6167&quot;&gt;#6167&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6311&quot;&gt;#6311&lt;/a&gt;).
                Define &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_UNORDERED_USE_MOVE&lt;/span&gt;&lt;/code&gt;
                to make them movable - Boost.Move is still used for elements regardless.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix sequence point warning (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6370&quot;&gt;#6370&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better support for C++11 compilers using older standard libraries.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/uuid/&quot;&gt;Uuid&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                fixed &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6258&quot;&gt;#6258&lt;/a&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                fixed &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5325&quot;&gt;#5325&lt;/a&gt;
                (sha1 implementation handles messages as long as the specification)
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                progress on &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6118&quot;&gt;#6118&lt;/a&gt;
                (there are fewer warnings)
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_49_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel: 11.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                LLVM Clang 2.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.5.2, 4.6.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel: 11.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.2.1, 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 8.0, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.4.0, 4.4.7, 4.5.4, 4.6.1, 4.7.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC 4.2.1, 32 and 64 bit.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          QNX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                QCC, C++0x mode: 4.4.2, 4.6.1, 4.6.2
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.2.4, 4.3.4, 4.4.4, 4.5.2, 4.6.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.4, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                pgCC: 11.9
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel: 10.1, 11.1, 12.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                PathScale: 4.0.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual Age 10.1
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clang from subversion
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1, 12.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 8.0, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++, Windows Mobile 5, with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.4.0, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode, mingw: 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw 64-bit: 4.4.7, 4.5.4, 4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                IBM XL C/C++ Enterprise Edition, V11.1.0.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC 4.2.1, 32 and 64 bit
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Sun 5.10
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_49_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;http://www.boost.org/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;http://www.boost.org/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
</description></item><item><title>Version 1.48.0</title><link>http://www.boost.org/users/history/version_1_48_0.html</link><guid>http://www.boost.org/users/history/version_1_48_0.html</guid><pubDate>Tue, 15 Nov 2011 10:47:30 -0500</pubDate><description>&lt;x&gt;
  
  
  
  &lt;div id=&quot;version_1_48_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/container/index.html&quot;&gt;Container&lt;/a&gt;:&lt;/span&gt;
  Standard
          library containers and extensions, from Ion Gaztañaga.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/locale/index.html&quot;&gt;Locale&lt;/a&gt;:&lt;/span&gt;
  Provide localization
          and Unicode handling tools for C++, from Artyom Beilis.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/doc/html/move.html&quot;&gt;Move&lt;/a&gt;:&lt;/span&gt;
  Portable move semantics
          for C++03 and C++11 compilers, from Ion Gaztañaga.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_48_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Implemented various performance improvements, including:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Using thread-local operation queues in single-threaded use
                      cases (i.e. when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;concurrency_hint&lt;/span&gt;&lt;/code&gt;
                      is 1) to eliminate a lock/unlock pair.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Allowing some &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;epoll_reactor&lt;/span&gt;&lt;/code&gt;
                      speculative operations to be performed without holding the
                      lock.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Improving locality of reference by performing an &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;epoll_reactor&lt;/span&gt;&lt;/code&gt;'s I/O operation
                      immediately before the corresponding handler is called. Also
                      improves scalability across CPUs.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Specialising asynchronous read and write operations for buffer
                      sequences that are arrays (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;array&lt;/span&gt;&lt;/code&gt;
                      or &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;array&lt;/span&gt;&lt;/code&gt;) of exactly two buffers.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed compile error in regex overload of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;async_read_until&lt;/span&gt;&lt;/code&gt;
                (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5688&quot;&gt;#5688&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed Windows-specific compile error by explicitly specifying the
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
                function from the global namespace (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5722&quot;&gt;#5722&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;deadline_timer&lt;/span&gt;&lt;/code&gt;
                implementation to not read clock unless the timer heap is non-empty.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed SSL buffer sizes to be large enough to hold a complete TLS
                record (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5854&quot;&gt;#5854&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed synchronous &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;null_buffers&lt;/span&gt;&lt;/code&gt;
                operations so that they obey the user's non-blocking setting (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5756&quot;&gt;#5756&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed to set &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fd_set&lt;/span&gt;&lt;/code&gt;
                size at runtime when using Windows.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Disabled MSVC warning due to const qualifier being applied to function
                type.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed crash that occurs when using Intel C++ compiler (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5763&quot;&gt;#5763&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed OpenSSL initialisation to support all available algorithms.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed SSL error mapping when session is gracefully shut down.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added some latency test programs.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clarified that a read operation ends when the buffer is full (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5999&quot;&gt;#5999&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed exception safety issue in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;epoll_reactor&lt;/span&gt;&lt;/code&gt;
                initialisation (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6006&quot;&gt;#6006&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Made number of strand implementations configurable via &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASIO_STRAND_IMPLEMENTATIONS&lt;/span&gt;&lt;/code&gt;
                macro.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added support for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASIO_ENABLE_SEQUENTIAL_STRAND_ALLOCATION&lt;/span&gt;&lt;/code&gt;
                flag which switches strand allocation to use a round-robin approach
                rather than hashing.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed potential strand starvation issue that can occur when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;strand&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
                is used.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/chrono/index.html&quot;&gt;Chrono&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5979&quot;&gt;#5979&lt;/a&gt;
                Added chrono rounding utilities as defined by Howard Hinnant &lt;a href=&quot;http://home.roadrunner.com/~hinnant/duration_io/chrono_util.html&quot;&gt;here&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5978&quot;&gt;#5978&lt;/a&gt;
                Add BOOST_CHRONO_HAS_PROCESS_CLOCKS to know if process clocks are
                available.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5998&quot;&gt;#5998&lt;/a&gt;
                Make possible to disable hybrid error handling.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5906&quot;&gt;#5906&lt;/a&gt;
                Take in account the constexpr as defined in the standard.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/5907&quot;&gt;#5907&lt;/a&gt;
                Take in account noexcept for compilers supporting it.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed some bugs.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                See the &lt;a href=&quot;http://www.boost.org/doc/html/chrono/appendices.html#chrono.appendices.history&quot;&gt;History&lt;/a&gt;
                for more details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/config/index.html&quot;&gt;Config&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_NO_DECLTYPE_N3276&lt;/span&gt;&lt;/code&gt;
                config macro. (See &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3276.pdf&quot;&gt;N3276&lt;/a&gt;.)
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/fusion/index.html&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Make &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;single_view&lt;/span&gt;&lt;/code&gt;
                a random access fusion sequence.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Remove bogus compile-time asserts from &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;distance&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Cleaner implementation of segmented Fusion.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/geometry&quot;&gt;Geometry&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bugfixes:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Robustness issue, in some circumstances the union failed to
                      output. Fixed.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Robustness issue, in some circumstances the calculated intersection
                      point was outside the segment. Fixed.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Concept issue, cartesian intersect didn't understand segments
                      other than the provided one. Fixed.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Sometimes self-intersections in linestrings were missed. Fixed.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      The fusion coordinate system was not registered correctly.
                      Fixed.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Solved tickets:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5726&quot;&gt;#5726&lt;/a&gt;
                      (Segment intersection algorithm still assumes 'first', 'second'
                      members)
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5744&quot;&gt;#5744&lt;/a&gt;
                      (mistake fusion adapt example)
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5748&quot;&gt;#5748&lt;/a&gt;
                      (need include &amp;lt;boost/foreach.hpp&amp;gt;)
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5954&quot;&gt;#5954&lt;/a&gt;
                      (distance_pythagoras skips sqrt() step)
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Improvements on algorithms:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Checking self-intersections is now not done automatically,
                      this can blast performance.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Besides that, checking self-intersections is made faster.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Intersections now avoid outputting duplicate points. So they
                      output the minimal set.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Additional algorithms:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      covered_by: within is defined as &amp;quot;within, not on boundary&amp;quot;.
                      covered_by is &amp;quot;within or on boundary&amp;quot;
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Additional functionality:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      within: strategies can now be specified for within&amp;lt;point,
                      box&amp;gt; and within&amp;lt;box, box&amp;gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      convert: a much broader range of conversions is supported
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      assign: idem, (currently partly) synonym for convert (but reversed
                      arguments)
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Additional coordinate types:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Basic support for Boost.Rational
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/graph/&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5185&quot;&gt;#5185&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5506&quot;&gt;#5506&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5813&quot;&gt;#5813&lt;/a&gt;
                and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5919&quot;&gt;#5919&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Various other bug fixes not in Trac.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed edge_descriptor type for reverse_graph to a new data type
                to avoid ambiguities with the edge_descriptor of the underlying graph.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/interprocess/index.html&quot;&gt;Interprocess&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2796&quot;&gt;#2796&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4031&quot;&gt;#4031&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4251&quot;&gt;#4251&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4452&quot;&gt;#4452&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4895&quot;&gt;#4895&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5077&quot;&gt;#5077&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5120&quot;&gt;#5120&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5123&quot;&gt;#5123&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5230&quot;&gt;#5230&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5197&quot;&gt;#5197&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5287&quot;&gt;#5287&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5294&quot;&gt;#5294&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5306&quot;&gt;#5306&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5308&quot;&gt;#5308&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5392&quot;&gt;#5392&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5409&quot;&gt;#5409&lt;/a&gt;,
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added support to customize offset_ptr and allow creating custom managed
                segments that might be shared between 32 and 64 bit processes.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Shared memory in windows has again filesystem lifetime: kernel bootstamp
                and WMI use to get a reliable timestamp was causing a lot of trouble.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/intrusive/index.html&quot;&gt;Intrusive&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4797&quot;&gt;#4797&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5165&quot;&gt;#5165&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5183&quot;&gt;#5183&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5191&quot;&gt;#5191&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/conversion/lexical_cast.htm&quot;&gt;Lexical cast&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added code to work with Inf and NaN values on any platform (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5689&quot;&gt;#5689&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                New Quickbook documentation (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5723&quot;&gt;#5723&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better performance and less memory usage for many combinations of
                Source and Target types.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better performance for C locale.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/math/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added new series evaluation methods to the cyclic Bessel I, J, K
                and Y functions. Also taken great care to avoid spurious over and
                underflow of these functions. Fixes issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5560&quot;&gt;#5560&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added an example of using Inverse Chi-Squared distribution for Bayesian
                statistics, provided by Thomas Mang.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added tests to use improved version of lexical_cast which handles
                C99 nonfinites without using global facets.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Corrected wrong out-of-bound uniform distribution CDF complement
                values &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5733&quot;&gt;#5733&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Enabled long double support on OpenBSD (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6014&quot;&gt;#6014&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed nextafter and related functions to behave in the same way
                as other implementations - so that nextafter(+INF, 0) is a finite
                value (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5832&quot;&gt;#5832&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed tuple include configuration to fix issue when using in conjunction
                with Boost.Tr1 (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5934&quot;&gt;#5934&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Changed class eps_tolerance to behave correctly when both ends of
                the range are zero (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/6001&quot;&gt;#6001&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed missing include guards on prime.hpp (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5927&quot;&gt;#5927&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Removed unused/undocumented constants from constants.hpp (issue
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5982&quot;&gt;#5982&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed missing std:: prefix in nonfinite_num_facets.hpp (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5914&quot;&gt;#5914&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Minor patches for Cray compiler compatibility.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/msm/&quot;&gt;MSM&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                eUML: added easier event reprocessing: process(event_) and reprocess()
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Rewrite of internal transition tables. There were a few bugs (failing
                recursivity in internal transition tables of sub-sub machines) and
                a missing feature (unused internal transition table of the main state
                machine).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bugfixes
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Reverted favor_compile_time policy to Boost 1.46 state
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      none event now is convertible from any other event
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      eUML and pseudo exit states
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Fixed not working Flag_AND
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Fixed rare bugs causing multiple processing of the same event
                      in a submachine whose transition table contains this event
                      and a base event of it.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      gcc warnings about unused variables
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Breaking change: the new internal transition table feature causes
                a minor breaking change. In a submachine, the &amp;quot;Fsm&amp;quot; template
                parameter for guards / actions of an internal table declared using
                internal_transition_table now is the submachine, not the higher-level
                state machine. Internal transitions declared using internal rows
                in the higher-level state machine keep their behavior (the &amp;quot;Fsm&amp;quot;
                parameter is the higher-level state machine). To sum up, the internal
                transition &amp;quot;Fsm&amp;quot; parameter is the closest state machine
                containing this transition.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/numeric/conversion/index.html&quot;&gt;Numeric.Conversion&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added numeric_cast_traits; see '&lt;a href=&quot;http://www.boost.org/doc/libs/1_48_0/libs/numeric/conversion/doc/html/boost_numericconversion/type_requirements_and_user_defined_types_support.html#boost_numericconversion.type_requirements_and_user_defined_types_support.udts_with_numeric_cast&quot;&gt;numeric_cast_traits&lt;/a&gt;'
                for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;em&gt;Breaking Change:&lt;/em&gt; Reduce numbers
                of operator overloads by using rvalue references on compilers that
                support them. Any user code that defines additional operator overloads
                on Proto expressions could potentially be rendered ambiguous by this
                change. The solution is to use a grammar to disable Proto's operators
                that are made ambiguous by any user-defined operators.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Move definitions of Proto tag types into an ADL-blocking namespace.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Add second template parameter to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;siwtch_&lt;/span&gt;&lt;/code&gt;
                to control dispatching to cases.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Allow dependent domains to be specified with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_EXTENDS&lt;/span&gt;&lt;/code&gt;
                and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_BASIC_EXTENDS&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/regex/&quot;&gt;Regex&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed issues: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/698&quot;&gt;#698&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5835&quot;&gt;#5835&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5958&quot;&gt;#5958&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5736&quot;&gt;#5736&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Spirit V2.5.1, see the '&lt;a href=&quot;http://www.boost.org/doc/libs/1_48_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_5_1.html&quot;&gt;What's
                New&lt;/a&gt;' section for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/type_traits/&quot;&gt;TypeTraits&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Extension to support &lt;a href=&quot;http://www.boost.org/libs/type_traits/doc/html/boost_typetraits/category/value_traits/operators.html&quot;&gt;operator
                detection&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/unordered/&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Improved support for the C++11 standard - breaking change to equality
                and emplace.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Use Boost.Move to implement move semantics.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                See the &lt;a href=&quot;http://www.boost.org/doc/html/unordered/changes.html#unordered.changes.boost_1_48_0___major_update&quot;&gt;change
                log&lt;/a&gt; for full details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;http://www.boost.org/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                See the &lt;a href=&quot;http://www.boost.org/libs/wave/ChangeLog&quot;&gt;Changelog&lt;/a&gt; for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_48_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                LLVM Clang 2.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.5.1, 4.5.2, 4.6
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.2.1, 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 8.0, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.4.0, 4.4.7, 4.5.4, 4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC 4.2.1, 32 and 64 bit.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          QNX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                QCC 4.4.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                QCC, C++0x mode: 4.4.2, 4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clang from subversion, with libc++ and GNU libstdc++
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                LLVM Clang 2.8 x
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.4, 4.5.2, 4.5.4, 4.6.1, 4.6.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.3, 4.4.4, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                pgCC: 11.2 x
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel: 10.1, 11.1, 12.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                PathScale: 4.0.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual Age 10.1
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clang from subversion, with libc++ and GNU libstdc++.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.2.1, 4.4.4.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 8.0, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++, Windows Mobile 5, with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.4.0, 4.4.7, 4.5.2, 4.5.4, 4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode, mingw: 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw 64-bit: 4.7.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                IBM XL C/C++ Enterprise Edition, V11.1.0.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC 4.2.1, 32 and 64 bit.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Sun 5.10
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_48_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;http://www.boost.org/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;http://www.boost.org/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/x&gt;</description></item><item><title>Version 1.47.0</title><link>http://www.boost.org/users/history/version_1_47_0.html</link><pubDate>Mon, 11 Jul 2011 18:19:33 -0400</pubDate><boostbook:purpose>
      New Libraries: Chrono, Geometry, Phoenix and Ratio. Updated Libraries: Accumulators,
      Asio, Config, DateTime, Dynamic Bitset, Foreach, Function, Function Types,
      Graph, Iostreams, Iterator, Lexical Cast, Logic, Math, Meta State Machine,
      MultiIndex, Proto, Random, Range, Spirit, Tokenizer, Utility, Uuid, Wave
    </boostbook:purpose><boostbook:downlaod>http://sourceforge.net/projects/boost/files/boost/1.47.0/</boostbook:downlaod><description>
  
  
  
  &lt;div id=&quot;version_1_47_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/chrono/index.html&quot;&gt;Chrono&lt;/a&gt;:&lt;/span&gt;
  Useful time
          utilities, from Vicente J. Botet Escribá.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/geometry/index.html&quot;&gt;Geometry&lt;/a&gt;:&lt;/span&gt;
  Geometry
          Library, from Barend Gehrels, Bruno Lalande and Mateusz Loskot.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/phoenix/index.html&quot;&gt;Phoenix&lt;/a&gt;:&lt;/span&gt;
  Define small
          unnamed function objects at the actual call site, and more, from Joel de
          Guzman, Dan Marsden and Thomas Heller.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/ratio/index.html&quot;&gt;Ratio&lt;/a&gt;:&lt;/span&gt;
  Compile time rational
          arithmetic, from Vicente J. Botet Escribá.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/accumulators/index.html&quot;&gt;Accumulators&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                New statistical accumulators: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;sum_kahan&lt;/span&gt;&lt;/code&gt;,
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;sum_of_weights_kahan&lt;/span&gt;&lt;/code&gt;,
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;sum_of_variates_kahan&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Many new features and improvements:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Signal handling.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      A debugging aid for asynchronous programs.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Timeouts on socket iostreams.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Composed connect operations.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Rewritten SSL implementation.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      C++0x move support.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Compatibility with POSIX &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fork&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      ... and much more. See the &lt;a href=&quot;/doc/libs/1_47_0/doc/html/boost_asio/history.html&quot;&gt;Revision
                      History&lt;/a&gt; in the Boost.Asio documentation for more details.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Tickets addressed: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2879&quot;&gt;#2879&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3238&quot;&gt;#3238&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3297&quot;&gt;#3297&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3307&quot;&gt;#3307&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3702&quot;&gt;#3702&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3741&quot;&gt;#3741&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3900&quot;&gt;#3900&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3905&quot;&gt;#3905&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3939&quot;&gt;#3939&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3958&quot;&gt;#3958&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4162&quot;&gt;#4162&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4971&quot;&gt;#4971&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5124&quot;&gt;#5124&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5128&quot;&gt;#5128&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5418&quot;&gt;#5418&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5453&quot;&gt;#5453&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/config/index.html&quot;&gt;Config&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1988&quot;&gt;#1988&lt;/a&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/date_time/index.html&quot;&gt;DateTime&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4920&quot;&gt;#4920&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3651&quot;&gt;#3651&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4845&quot;&gt;#4845&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4475&quot;&gt;#4475&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4952&quot;&gt;#4952&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5345&quot;&gt;#5345&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5250&quot;&gt;#5250&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4798&quot;&gt;#4798&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4754&quot;&gt;#4754&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4411&quot;&gt;#4411&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5126&quot;&gt;#5126&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4780&quot;&gt;#4780&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2475&quot;&gt;#2475&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1674&quot;&gt;#1674&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/dynamic_bitset/index.html&quot;&gt;Dynamic Bitset&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5439&quot;&gt;#5439&lt;/a&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/foreach/index.html&quot;&gt;Foreach&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Use rvalue refs on supporting compilers for const rvalue detection.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/function/index.html&quot;&gt;Function&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3410&quot;&gt;#3410&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3618&quot;&gt;#3618&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3912&quot;&gt;#3912&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4073&quot;&gt;#4073&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4325&quot;&gt;#4325&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4717&quot;&gt;#4717&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4765&quot;&gt;#4765&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/function_types/index.html&quot;&gt;Function Types&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1653&quot;&gt;#1653&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3162&quot;&gt;#3162&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Remove deprecated function &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;kolmogorov_max_flow&lt;/span&gt;&lt;/code&gt;,
                use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boykov_kolmogorov_max_flow&lt;/span&gt;&lt;/code&gt;
                instead.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Removed &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_same&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; header since its functionality
                is in Boost.Type_Traits.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Support filesystem v3 paths (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4485&quot;&gt;#4485&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix a memory leak in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;chain&lt;/span&gt;&lt;/code&gt;
                (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4922&quot;&gt;#4922&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iterator/index.html&quot;&gt;Iterator&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;function_input_iterator&lt;/span&gt;&lt;/code&gt;
                (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2893&quot;&gt;#2893&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1427&quot;&gt;#1427&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1517&quot;&gt;#1517&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3434&quot;&gt;#3434&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/conversion/lexical_cast.htm&quot;&gt;Lexical cast&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better performance and less memory usage for many combinations of
                Source and Target types (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5564&quot;&gt;#5564&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5417&quot;&gt;#5417&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4397&quot;&gt;#4397&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5350&quot;&gt;#5350&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5576&quot;&gt;#5576&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Documentation updated (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5576&quot;&gt;#5576&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5494&quot;&gt;#5494&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/logic/index.html&quot;&gt;Logic&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3093&quot;&gt;#3093&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3600&quot;&gt;#3600&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added changesign function to sign.hpp to facilitate addition of nonfinite
                facets.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Addition of nonfinite facets from Johan Rade, with tests, examples
                of use for C99 format infinity and NaN, and documentation.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added tests and documentation of changesign from Johan Rade.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/msm/index.html&quot;&gt;Meta State Machine&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added a &lt;a href=&quot;/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s05.html#backend-start&quot;&gt;&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
                method in the back-end.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added partial support for &lt;a href=&quot;/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s04.html#eUML-phoenix&quot;&gt;Boost.Phoenix
                functors in eUML&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added the possibility to &lt;a href=&quot;/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s05.html#backend-state-switch&quot;&gt;choose
                when state switching occurs&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bugfixes:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5117&quot;&gt;#5117&lt;/a&gt;,
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5253&quot;&gt;#5253&lt;/a&gt;,
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5533&quot;&gt;#5533&lt;/a&gt;,
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5573&quot;&gt;#5573&lt;/a&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      gcc warnings about unused variables.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      better implementation of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;favor_compile_time&lt;/span&gt;&lt;/code&gt;
                      back-end policy.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      bug with eUML and state construction.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      incorrect eUML event and state macros.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      incorrect event type passed to a direct entry state's on_entry
                      action.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      more examples.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/multi_index/index.html&quot;&gt;MultiIndex&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed an ADL problem in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;composite_key_compare&lt;/span&gt;&lt;/code&gt;
                related with Boost.Ref.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Maintenance fixes.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Pre-preprocessed for better compile times.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Default preprocessor limits raised:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Max expression arity (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_MAX_ARITY&lt;/span&gt;&lt;/code&gt;)
                      bumped from 5 to 10.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Max function call arity (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_MAX_FUNCTION_CALL_ARITY&lt;/span&gt;&lt;/code&gt;)
                      bumped from 5 to 10.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Max logical operator arity (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_MAX_LOGICAL_ARITY&lt;/span&gt;&lt;/code&gt;)
                      bumped from 8 to 10.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better integration of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;basic_expr&lt;/span&gt;&lt;/code&gt;
                to avoid accidental needless instantiations of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;expr&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/random/index.html&quot;&gt;Random&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Synchronized with the new standard.
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Many new distributions added: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;chi_squared_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;negative_binomial_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fisher_f_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;student_t_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;weibull_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;extreme_value_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;discrete_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;piecewise_constant_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;piecewise_liear_distribution&lt;/span&gt;&lt;/code&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Renamed &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_int&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_real&lt;/span&gt;&lt;/code&gt;
                      to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_int_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_real_distribution&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added members to all distributions: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;param_type&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;param&lt;/span&gt;&lt;/code&gt;, stream
                      operators, comparison operators, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;min&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;max&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Allow distributions to be used directly with generators without
                      use of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;variate_generator&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Changed the meaning of the parameters of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added a second parameter to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;gamma_distribution&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;seed_seq&lt;/span&gt;&lt;/code&gt;
                      and added the corresponding constructors and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;seed&lt;/span&gt;&lt;/code&gt; overloads the generators.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;generate_canonical&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Renamed the engine tempates. e.g. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mersenne_twister&lt;/span&gt;&lt;/code&gt;
                      becomes &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mersenne_twister_engine&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      New engine adapter &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;independent_bits_engine&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added new predefined engine typedefs: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mt19937_64&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ranlux&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;_base&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;]&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;knuth_b&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Updated seeding algorithms.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;discard&lt;/span&gt;&lt;/code&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Use unsigned types instead of signed types in all the predefined
                      engines.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;linear_congruential_engine&lt;/span&gt;&lt;/code&gt;
                      could assert because the modular arithmetic was not implemented
                      in all cases. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;shuffle_output&lt;/span&gt;&lt;/code&gt;,
                      now called &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;shuffle_order_engine&lt;/span&gt;&lt;/code&gt;,
                      could cause integer overflow. These cases were not triggered
                      by any predefined engines.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_small_int&lt;/span&gt;&lt;/code&gt;
                      now actually behaves as documented.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                New efficient algorithms for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;binomial_distribution&lt;/span&gt;&lt;/code&gt;
                and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;poisson_distribution&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Moved all features into &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt;
                &lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;random&lt;/span&gt;&lt;/code&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Backwards compatibility issues:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      The seeding algorithms have changed. This was unavoidable for
                      compatibility with the standard. Not to mention that some of
                      the existing algorithms were weird and inconsistent.
                      &lt;ul&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Seeding with an integer: The behaviour should be unchanged
                            for most generators except &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lagged_fibonacci&lt;/span&gt;&lt;/code&gt;
                            and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;subtract_with_carry&lt;/span&gt;&lt;/code&gt;
                            (and thus &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ranlux&lt;/span&gt;&lt;/code&gt;).
                          &lt;/div&gt;
                        &lt;/li&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Seeding a generator with another generator: This has
                            been enabled by making all all generators models of
                            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;SeedSeq&lt;/span&gt;&lt;/code&gt;.
                            Therefore, if you seed a Boost.Random generator with
                            a non Boost.Random generator, your code will no longer
                            compile. The algorithm has changed, so code using this
                            seeding method will yield different values.
                          &lt;/div&gt;
                        &lt;/li&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Seeding a generator from a pair of iterators: This implicitly
                            assumed that the elements were 32-bit integers in some
                            places, but not everywhere. I've added this requirement
                            everywhere and updated the algorithms accordingly. The
                            behaviour of generators with a &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;value_type&lt;/span&gt;&lt;/code&gt;
                            no more than 32 bits should be unchanged.
                          &lt;/div&gt;
                        &lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Renaming:
                      &lt;ul&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Whenever a class was renamed, there is a wrapper with
                            the old name. There are also using declarations in namespace
                            boost for everything that was moved.
                          &lt;/div&gt;
                        &lt;/li&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            The names of a few accessors in the distributions changed.
                            Both the old and the new names are allowed.
                          &lt;/div&gt;
                        &lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt;:
                      The behaviour is different at runtime. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt; provide
                      the old behaviour, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt; provide
                      the new behaviour.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Streaming: gamma_distribution has a new parameter, thus text
                      saved with the old version will not readable by the new version.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;variate_generator&lt;/span&gt;&lt;/code&gt;
                      is now a simple pass through wrapper. Code that assumes that
                      it will adjust the generator's result type to match the distribution
                      will no longer work. This is not an issue with any of the distributions
                      provided by Boost.Random.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Return types: The &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;result_types&lt;/span&gt;&lt;/code&gt;
                      of some generators have changed slightly. Some signed types
                      have changed to unsigned to match the standard.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;has_fixed_range&lt;/span&gt;&lt;/code&gt;:
                      This is now always false, as it doesn't appear to be very useful
                      and is excessively cumbersome. Anything that was accessing
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;const_min&lt;/span&gt;&lt;/code&gt; and
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;const_max&lt;/span&gt;&lt;/code&gt; without
                      first checking &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;has_fixed_range&lt;/span&gt;&lt;/code&gt;
                      was incorrect to begin with.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/range/index.html&quot;&gt;Range&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed the end position &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;irange&lt;/span&gt;&lt;/code&gt;
                when step size is greater than 1 (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5544&quot;&gt;#5544&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Spirit V2.5, see the '&lt;a href=&quot;/doc/libs/1_47_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_5.html&quot;&gt;What's
                New&lt;/a&gt;' section for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tokenizer/index.html&quot;&gt;Tokenizer&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4649&quot;&gt;#4649&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/index.html&quot;&gt;Utility&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4432&quot;&gt;#4432&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/index.html&quot;&gt;Uuid&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed tickets: (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5570&quot;&gt;#5570&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4601&quot;&gt;#4601&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4991&quot;&gt;#4991&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5145&quot;&gt;#5145&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5235&quot;&gt;#5235&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Wave V2.3.0, see the &lt;a href=&quot;/libs/wave/ChangeLog&quot;&gt;Changelog&lt;/a&gt;
                for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.build_system&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Build System&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          The official name of Boost.Build executable was changed to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;b2&lt;/span&gt;&lt;/code&gt;. The bootstrap scripts create a copy
          with the old name &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;bjam&lt;/span&gt;&lt;/code&gt;
          to prevent third-party build scripts from failing.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;BoostBook&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Handle doxygen tags: &lt;code&gt;&lt;span class=&quot;special&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;see&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;tparam&lt;/span&gt;&lt;/code&gt;,
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ref&lt;/span&gt;&lt;/code&gt; (for classes
                only).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Support note for classes as well as functions.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Generate consistent ids for headings.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Improved unicode support for windows.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Warn about windows paths, as they aren't portable.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Reverse deprecation of &lt;code&gt;&lt;span class=&quot;special&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;]&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Support date ranges and comma seperated clauses in copyright attributes.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Improved delimeter checking for simple markup (e.g. &lt;code&gt;&lt;span class=&quot;special&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;*&lt;/span&gt;&lt;/code&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Pass-thru comments in code snippets.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;code&gt;__FILENAME__&lt;/code&gt; macro now generates relative paths.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Allow quickbook escapes inside comments in syntax highlighted code.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                LLVM Clang 2.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.1, 4.4.3, 4.4.5, 4.5.1, 4.5.2,
                4.6.0, 4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 12.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Apple Clang 2.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.2.1, 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 7.1, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.4.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC 4.2.1, 64 bit
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          QNX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                QCC
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clang from subversion, with GNU libstdc++.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                LLVM Clang 2.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.3, 4.4.5, 4.5.1, 4.5.2, 4.6.0,
                4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                pgCC: 11.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel: 10.1, 11.0, 11.1, 12.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                PathScale: 3.2
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clang from subversion, with GNU libstdc++.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 7.1, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++, Windows Mobile 5, with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode, mingw: 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                IBM XL C/C++ Enterprise Edition, V11.1.0.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
</description></item><item><title>Version 1.46.1</title><pubDate>Sat, 12 Mar 2011 10:45:53 -0500</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      Bug fixes: Asio, Fusion, Graph, Icl, Math, Polygon, Proto, Property Tree, Signals2,
      TR1, Unordered.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.46.1/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_46_1.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EV_ONESHOT&lt;/span&gt;&lt;/code&gt; seems to
              cause problems on some versions of Mac OS X, with the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;io_service&lt;/span&gt;&lt;/code&gt; destructor getting stuck
              inside the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
              system call. Changed the kqueue backend to use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EV_CLEAR&lt;/span&gt;&lt;/code&gt;
              instead (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5021&quot;&gt;#5021&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed compile failures with some versions of &lt;tt&gt;g++&lt;/tt&gt;
              due to the use of anonymous enums (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4883&quot;&gt;#4883&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a bug on kqueue-based platforms, where some system calls that
              repeatedly fail with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EWOULDBLOCK&lt;/span&gt;&lt;/code&gt;
              are not correctly re-registered with kqueue.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;asio&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;streambuf&lt;/span&gt;&lt;/code&gt; to ensure that its internal
              pointers are updated correctly after the data has been modified using
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;streambuf&lt;/span&gt;&lt;/code&gt; member functions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a bug that prevented the linger socket option from working on
              platforms other than Windows.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;disable_if&lt;/span&gt;&lt;/code&gt; for
              Visual C++ 7.1/8.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix for STLPort (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5217&quot;&gt;#5217&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PGI large file support
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Bug fixes, including fixes for: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5181&quot;&gt;#5181&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5180&quot;&gt;#5180&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5199&quot;&gt;#5199&lt;/a&gt;
              and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5175&quot;&gt;#5175&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/icl/&quot;&gt;Icl&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intersects for interval_maps and segment_type/element_type (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5207&quot;&gt;#5207&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed some ambiguous calls to functions in boost and std namespaces.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Other bug fixes, and documentation fixes.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Several minor bug fixes.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/polygon/&quot;&gt;Polygon&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Disabled 45-degree booleans optimization.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Make &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;display_expr&lt;/span&gt;&lt;/code&gt; copyable
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5096&quot;&gt;#5096&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix const correctness problem in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;pass_through&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/property_tree/&quot;&gt;Property Tree&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix compile error in JSON parser.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals2/&quot;&gt;Signals2&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix unused parameter warning.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tr1/&quot;&gt;TR1&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Allow specialization of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;tr1&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hash&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Improved support for Pathscale and Sun compilers.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add missing copy constructors and assignment operators when using rvalue
              references (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5119&quot;&gt;#5119&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.other_changes&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Other changes&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Update getting started guide to reflect changes to boost build.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          In quickbook, workaround optimization bug in g++ 4.4.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.1, 4.4.3, 4.4.5, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang: 2.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Pathscale: 3.2
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 11.1
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0 and 10.0.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.2.1, 64 bit.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.4, 4.4.5, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              pgCC: 11.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PathScale: 3.2, 4.0.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual Age C++: 10.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel C++ Compiler: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion, with GNU libstdc++, libc++ and libc++ in C++0x
              mode.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 9.0, 10.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++ with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++, Windows Mobile 5, with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw, C++0x mode: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Borland: 6.1.3 (2009), 6.2.1 (2010)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM XL C/C++ Enterprise Edition, V11.1.0.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Sun C++: 5.10
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Version 1.46.0</title><pubDate>Mon, 21 Feb 2011 15:36:13 -0500</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Icl. Updated Libraries: Array, Asio, Bind, Concept Check, Filesystem,
      Fusion, Hash, Iostreams, Iterator, Math, Meta State Machine, Optional, Pool,
      Program Options, Proto, Signals, Spirit, Tokenizer, Unordered, Wave. Updated
      Tools: Boostbook, Inspect, Quickbook.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.46.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_46_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/icl/index.html&quot;&gt;Icl&lt;/a&gt;:&lt;/span&gt;
  Interval Container
          Library, interval sets and maps and aggregation of associated values, from
          Joachim Faulhaber.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/array/index.html&quot;&gt;Array&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added support for cbegin/cend (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4761&quot;&gt;#4761&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a problem with the Sun compiler (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4757&quot;&gt;#4757&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed an integer overflow problem that occurs when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;address_v4&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; is used on 64-bit platforms.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a problem on older Linux kernels (where epoll is used without
              timerfd support) that prevents timely delivery of deadline_timer handlers,
              after the program has been running for some time (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5045&quot;&gt;#5045&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/bind/index.html&quot;&gt;Bind&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;make_adaptable&lt;/span&gt;&lt;/code&gt; now
              documented (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4532&quot;&gt;#4532&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/concept_check/index.html&quot;&gt;Concept Check&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              fixed warnings with self-assignment (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4918&quot;&gt;#4918&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/index.html&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Version 3 of the library is now the default.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM vacpp: Workaround for compiler bug affecting &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;iterator_facade&lt;/span&gt;&lt;/code&gt;.
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4912&quot;&gt;#4912&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Verify, clarify, document that &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
              can be used to specify &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_FILESYSTEM_VERSION&lt;/span&gt;&lt;/code&gt;.
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4891&quot;&gt;#4891&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Replaced C-style &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;
              with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Undeprecated &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unique_path&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;. Instead, add a note mentioning the
              workaround for lack of thread safety and possible change to cwd. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unique_path&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
              is just too convenient to deprecate!
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Cleared several GCC warnings.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed V2 code to use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_THROW_EXCEPTION&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Windows: Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; to report non-symlink reparse point
              correctly.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;symlink_option&lt;/span&gt;&lt;/code&gt;
              to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;recursive_directory_iterator&lt;/span&gt;&lt;/code&gt;,
              allowing control over recursion into directory symlinks. Note that
              the default is changed to not recurse into directory symlinks.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Reference documentation cleanup, including fixing missing and broken
              links, and adding missing functions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Miscellaneous implementation code cleanup.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/index.html&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              vector copy constructor now copies sequence members in the same order
              on different platforms (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2823&quot;&gt;#2823&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed Graphviz output to work on Visual C++ 7.1.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Replaced assert with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed to Boost.Filesystem v3.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed the following bugs from Trac: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1021&quot;&gt;#1021&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4556&quot;&gt;#4556&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4631&quot;&gt;#4631&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4642&quot;&gt;#4642&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4715&quot;&gt;#4715&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4731&quot;&gt;#4731&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4737&quot;&gt;#4737&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4753&quot;&gt;#4753&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4758&quot;&gt;#4758&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4793&quot;&gt;#4793&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4843&quot;&gt;#4843&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4851&quot;&gt;#4851&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4852&quot;&gt;#4852&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4887&quot;&gt;#4887&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4914&quot;&gt;#4914&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4966&quot;&gt;#4966&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed various bugs not in Trac.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Support for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;type_index&lt;/span&gt;&lt;/code&gt; (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4756&quot;&gt;#4756&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wconversion&lt;/span&gt;&lt;/code&gt;
              warnings.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt; instead
              of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed flush regression (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4590&quot;&gt;#4590&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iterator/index.html&quot;&gt;Iterator&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              fixed problem with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;implicit_cast&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3645&quot;&gt;#3645&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/doc/sf_and_dist/html/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added Wald, Inverse Gaussian and geometric distributions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added information about configuration macros.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added support for mpreal as a real-numered type.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/msm/index.html&quot;&gt;Meta State Machine&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-compile-time-analysis&quot;&gt;Compile-time
              state machine analysis&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-boost-parameter&quot;&gt;Boost.Parameter
              interface definition for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;msm&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;state_machine&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/code&gt; template arguments&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-queues&quot;&gt;Possibility
              to provide a container for the event and deferred event queues&lt;/a&gt;.
              A policy implementation based on a more efficient Boost.CircularBuffer
              is provided.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;msm&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;state_machine&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_flag_active&lt;/span&gt;&lt;/code&gt; method made const.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-enqueueing&quot;&gt;Added
              possibility to enqueue events for delayed processing&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Bugfixes
            &lt;/div&gt;
            &lt;ul&gt;
              &lt;li&gt;
                &lt;div&gt;
                  &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4926&quot;&gt;#4926&lt;/a&gt;.
                &lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;div&gt;
                  stack overflow using the Defer functor
                &lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;div&gt;
                  anonymous transition of a submachine not called for the initial
                  state
                &lt;/div&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/optional/index.html&quot;&gt;Optional&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Updated test results with information about expected failures (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2294&quot;&gt;#2294&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/pool/index.html&quot;&gt;Pool&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Now can set a max_size for pool (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2696&quot;&gt;#2696&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt; uses &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;reinterpret_cast&lt;/span&gt;&lt;/code&gt;
              instead of &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2941&quot;&gt;#2941&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool_allocator&lt;/span&gt;&lt;/code&gt; now works with vector
              of vectors (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/386&quot;&gt;#386&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Boost pool is now compatible with Microsoft memory leak detection (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4346&quot;&gt;#4346&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/program_options/index.html&quot;&gt;Program Options&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed errors in examples in docs (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3992&quot;&gt;#3992&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4858&quot;&gt;#4858&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Now takes &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;argv&lt;/span&gt;&lt;/code&gt; as const
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3909&quot;&gt;#3909&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;strong&gt;Breaking change&lt;/strong&gt;: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
              no longer defines &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pop_front&lt;/span&gt;&lt;/code&gt;
              and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;reverse&lt;/span&gt;&lt;/code&gt;, which have moved to their
              own headers under &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;/code&gt;
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add callable wrappers for more Fusion algorithms (including &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;at&lt;/span&gt;&lt;/code&gt;); and callable wrappers for some
              std utilities like &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;make_pair&lt;/span&gt;&lt;/code&gt;,
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;first&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;second&lt;/span&gt;&lt;/code&gt;, all under the new &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;/code&gt; directory
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Allow transforms to be specified separately from a grammar
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;matches&lt;/span&gt;&lt;/code&gt; preserves domain-specific
              expression wrappers
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix ADL issue with &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;,&lt;/span&gt;&lt;/code&gt; in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;and_&lt;/span&gt;&lt;/code&gt;
              transform
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix handling of grammar checking in expressions involving multiple
              domains (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4675&quot;&gt;#4675&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix ambiguous &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;/code&gt; in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;display_expr&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4910&quot;&gt;#4910&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_sequence&lt;/span&gt;&lt;/code&gt; answers true for Proto
              expressions (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5006&quot;&gt;#5006&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Eliminate &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wundef&lt;/span&gt;&lt;/code&gt;
              GCC warning in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5075&quot;&gt;#5075&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals/index.html&quot;&gt;Signals&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              gcc warning cleanup (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4365&quot;&gt;#4365&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Spirit V2.4.2, see the '&lt;a href=&quot;/doc/libs/1_46_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_4_2.html&quot;&gt;What's
              New&lt;/a&gt;' section for details.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tokenizer/index.html&quot;&gt;Tokenizer&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;isspace&lt;/span&gt;&lt;/code&gt;/&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ispunct&lt;/span&gt;&lt;/code&gt; was called with wrong character
              type (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4791&quot;&gt;#4791&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid using &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;amp;&lt;/span&gt;&lt;/code&gt;
              with the value type.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wconversion&lt;/span&gt;&lt;/code&gt;
              warnings.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              See the &lt;a href=&quot;/libs/wave/ChangeLog&quot;&gt;Changelog&lt;/a&gt; for details.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;Boostbook&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Better support for attributes on root elements - including &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lang&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/inspect/index.html&quot;&gt;Inspect&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Check that Boost headers do not use C's &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;
              macro.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add support for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lang&lt;/span&gt;&lt;/code&gt;
              attribute in documentation info.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Improved anchors.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Support &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;import&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;include&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;xinclude&lt;/span&gt;&lt;/code&gt;
              in conditional phrases.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Uses Filesystem 3.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.5, 4.5.2,
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang: 2.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Pathscale: 3.2.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 11.1
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0 and 10.0.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.2.1, 64 bit.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.3, 4.4.5, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              pgCC 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PathScale: 3.2, 4.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual Age C++ 10.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel C++ Compiler: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0, 10.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++ with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++, Windows Mobile 5, with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0, 4.5.1, 4.6.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw, C++0x mode: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Borland: 6.1.3 (2009), 6.2.1 (2010)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM XL C/C++ Enterprise Edition, V11.1.0.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC 4.2.1, 64 bit
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Sun C++: 5.10
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item></channel>
</rss>