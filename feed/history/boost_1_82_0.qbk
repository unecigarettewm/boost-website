[article Version 1.82.0
    [quickbook 1.6]
    [source-mode c++]
    [purpose
        New Libraries:
        Updated Libraries:
        [/ Please don't add updated libraries yet, it
           can create unnecessary merge conflicts.]
    ]
    [authors [Dawes, Beman]]
    [/ last-revision is used for the final release date]
    [last-revision ]
]

[import ext.qbk]

[/
Formatting reference: https://www.boost.org/doc/tools/quickbook/
Please keep the list of libraries sorted in lexicographical order.
]

[section Announcements]

[table Libraries dropping old C++ standard support in Boost 1.84
  [[Library] [Requires C++] [Affected libraries]]
  [[TODO] [TODO] [TODO]]
]

[endsect]

[section New Libraries]

[/ Example:
* [phrase library..[@/libs/accumulators/ Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.
]

* [phrase library..[@/libs/msyql/ Mysql]:] a C++11 client for the
  MySQL database server, based on Boost.Asio, from Reuben Perez.

[endsect]

[section Updated Libraries]

[/ Example:
* [phrase library..[@/libs/interprocess/ Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * Move semantics for shared objects ([ticket 1932]).
  * Conform to `std::pointer_traits` requirements ([github_pr interprocess 32])
  * Fixed `named_condition_any` fails to notify ([github interprocess 62])
]

* [phrase library..[@/libs/static_string/ StaticString]:]
  * Boost.Core `string_view` and `std::string_view` interoperability

* [phrase library..[@/libs/url/ URL]:]
  * Add `url::format` with automatic percent-encoding
  * URL router example
  * `set_params` convenience function
  * Support implicit conversions to `string_view`
  * Parsing constructors are implicit
  * `string_token::arg` has virtual destructor and slice protection
  * Support `BOOST_URL_DISABLE_THREADS`
  * Improvements and Bug fixes:
    * WIN32_LEAN_AND_MEAN macro redefinition warning
    * Comparison differentiates absent and empty components
    * Detect `hier_part_rule` with empty-port-like segments
    * Segments comparison as if normalized works above root
    * hier-part path-rootless considers invalid segments
    * port as number is set to 0 when it overflows
    * ipv4 to string overflow detection algorithm

* [phrase library..[@/libs/math/ Math]:]
  * [*Deprecated C++11 support]: We now require C++14 as a minimum standard.
    Our minimum tested compiler versions are now Clang-5, GCC-5 or MSVC-14.1.
  * Added Estrin's method for polynomial evaluation.
  * Fix various issues in non-central distributions to allow for larger non-centralities see [@https://github.com/boostorg/math/pull/939 939].
  * Added CMake install target.
  * Fix special_functions.hpp to disable anything which can't be used in an exception-free environment.
  * Get condition number calculation working in C++14.
  * Fix `constexpr` table driven functions to avoid massive slowdown when the code is not actually `constexpr`, see [@https://github.com/boostorg/math/issues/923 923].
  * Improve tanh_sinh boundary handling, see [@https://github.com/boostorg/math/pull/894 894].
  * Add Linux arm64, s390x and Apple M1 testing, fix up test cases to handle 128-bit long doubles.
  * Improve `constexpr` math functions to better handle infinities and NaN's.
  * Make the integrators const-correct.
  * Fix tanh_sinh integrator in case the function underflows, see [@https://github.com/boostorg/math/issues/898 898].
  * Don't use `std::cbrt` as some platforms still don't support it.
  * Stop non-central T from raising spurious FE_INVALID exceptions, see [@https://github.com/boostorg/math/pull/892 892].
  * Fix binomial distribution edge case.
  * Improve ibeta handling of very small arguments, see [@https://github.com/boostorg/math/pull/884 884].
  * Improve ibeta handling of infinities and NaN's, see [@https://github.com/boostorg/math/issues/878 874].
  * Improve error handling in powm1, see [@https://github.com/boostorg/math/issues/781 781].
  * Improve root-finder bracketing to bracket faster when the exponent is super-large or small.
  * Fix root finding edge cases, see [@https://github.com/boostorg/math/issues/873 873].
  * Lot's of miscellaneous warning fixes.
  * Add assertions when using features which require C++17 for better error messages when invoking the compiler in a lower std version.

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* Linux:
  * Clang: 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 12.0.0, 13.0.0, 14.0.0, 15.0.0
  * Clang, C++11: 3.4, 11.0.0, 13.0.0, 14.0.0, 15.0.0
  * Clang, C++14: 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0
  * Clang, C++17: 6.0.1, 7.0.0, 8.0.0, 9.0.0, 10.0.0, 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0
  * Clang, C++20: 11.0.0, 12.0.0, 13.0.0, 14.0.0, 15.0.0

  * GCC: 4.6.3, 11, 12
  * GCC, C++11: 4.7.3, 4.8.5, 11, 12
  * GCC, C++14: 5.4.0, 6.4.0, 7.3.0, 8.0.1, 9.1.0, 11, 12
  * GCC, C++17: 7.3.0, 8.0.1, 9.1.0, 11, 12
  * GCC, C++20: 8.0.1, 9.1.0, 10, 11, 12

* OS X:
  * Apple Clang: 11.0.3
  * Apple Clang, C++11: 11.0.3
  * Apple Clang, C++14: 11.0.3
  * Apple Clang, C++17: 11.0.3
  * Apple Clang, C++20: 11.0.3

* Windows:
  * Visual C++: 10.0, 11.0, 12.0, 14.0, 14.1, 14.2, 14.3

[endsect]

[section Acknowledgements]

Marshall Clow and Glen Fernandes managed this release.

[endsect]
